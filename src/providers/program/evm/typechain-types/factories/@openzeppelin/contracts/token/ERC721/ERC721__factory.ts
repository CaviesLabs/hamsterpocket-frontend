/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721,
  ERC721Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC721/ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523462000319576200175f803803806200001d816200031e565b928339810190604081830312620003195780516001600160401b03908181116200031957836200004f91840162000344565b916020938482015183811162000319576200006b920162000344565b825190828211620003035760008054926001958685811c95168015620002f8575b88861014620002e4578190601f9586811162000291575b5088908683116001146200022d57849262000221575b5050600019600383901b1c191690861b1781555b81519384116200020d5784548581811c9116801562000202575b87821014620001ee57838111620001a6575b50859284116001146200014157839495509262000135575b5050600019600383901b1c191690821b1790555b6040516113a89081620003b78239f35b01519050388062000111565b9190601f1984169585845280842093905b8782106200018e5750508385961062000174575b505050811b01905562000125565b015160001960f88460031b161c1916905538808062000166565b80878596829496860151815501950193019062000152565b8582528682208480870160051c820192898810620001e4575b0160051c019086905b828110620001d8575050620000f9565b838155018690620001c8565b92508192620001bf565b634e487b7160e01b82526022600452602482fd5b90607f1690620000e7565b634e487b7160e01b81526041600452602490fd5b015190503880620000b9565b8480528985208994509190601f198416865b8c8282106200027a575050841162000260575b505050811b018155620000cd565b015160001960f88460031b161c1916905538808062000252565b8385015186558c979095019493840193016200023f565b9091508380528884208680850160051c8201928b8610620002da575b918a91869594930160051c01915b828110620002cb575050620000a3565b8681558594508a9101620002bb565b92508192620002ad565b634e487b7160e01b83526022600452602483fd5b94607f16946200008c565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200030357604052565b919080601f84011215620003195782516001600160401b03811162000303576020906200037a601f8201601f191683016200031e565b92818452828287010111620003195760005b818110620003a257508260009394955001015290565b85810183015184820184015282016200038c56fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a7146109c35750816306fdde03146108da578163081812fc14610887578163095ea7b31461068857816323b872dd1461065e57816342842e0e146106355781636352211e146105da57816370a08231146104eb57816395d89b411461037d578163a22cb4651461024a578163b88d4fde1461019e578163c87b56dd1461012f575063e985e9c5146100b457600080fd5b3461012b57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012b5760ff816020936100f0610b0e565b6100f8610b36565b73ffffffffffffffffffffffffffffffffffffffff91821683526005875283832091168252855220549151911615158152f35b5080fd5b83833461012b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012b5761016d61019a933561115e565b81815161017981610bb9565b5280519161018683610bb9565b825251918291602083526020830190610ab0565b0390f35b919050346102465760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610246576101d8610b0e565b6101e0610b36565b846064359467ffffffffffffffff861161012b573660238701121561012b578501359461021861020f87610c45565b95519586610c04565b858552366024878301011161012b578561024396602460209301838801378501015260443591610dd1565b80f35b8280fd5b9190503461024657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024657610283610b0e565b90602435918215158093036103795773ffffffffffffffffffffffffffffffffffffffff169283331461031d575033845260056020528084208385526020528084207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b8284346104e857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104e8578151918160019283549384811c918186169586156104de575b60209687851081146104b2578899509688969785829a52918260001461046d575050600114610412575b50505061019a9291610403910385610c04565b51928284938452830190610ab0565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610455575050508201018161040361019a6103f0565b8054848a01860152889550879490930192810161043c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b86019093019350849250610403915061019a90506103f0565b60248360228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b92607f16926103c6565b80fd5b8391503461012b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012b5773ffffffffffffffffffffffffffffffffffffffff61053a610b0e565b169081156105575760208480858581526003845220549051908152f35b60849060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152fd5b8284346104e85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104e8575073ffffffffffffffffffffffffffffffffffffffff61062d60209335610ce4565b915191168152f35b50503461012b576102439061064936610b59565b9192519261065684610bb9565b858452610dd1565b83346104e85761024361067036610b59565b9161068361067e8433610e81565b610d46565b610efc565b90503461024657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610246576106c0610b0e565b906024359273ffffffffffffffffffffffffffffffffffffffff9182806106e687610ce4565b16941693808514610804578033149081156107e5575b5015610763578486526020528420827fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905561073b83610ce4565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152fd5b90508652600560205281862033875260205260ff8287205416386106fc565b50602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152fd5b8284346104e85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104e8575073ffffffffffffffffffffffffffffffffffffffff61062d60209335610d16565b8284346104e857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104e85781519181825492600184811c918186169586156109b9575b60209687851081146104b2578899509688969785829a52918260001461046d57505060011461095e5750505061019a9291610403910385610c04565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106109a1575050508201018161040361019a6103f0565b8054848a018601528895508794909301928101610988565b92607f1692610922565b8491346102465760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024657357fffffffff00000000000000000000000000000000000000000000000000000000811680910361024657602092507f80ac58cd000000000000000000000000000000000000000000000000000000008114908115610a86575b8115610a5c575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483610a55565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150610a4e565b919082519283825260005b848110610afa5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610abb565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610b3157565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610b3157565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060910112610b315773ffffffffffffffffffffffffffffffffffffffff906004358281168103610b3157916024359081168103610b31579060443590565b6020810190811067ffffffffffffffff821117610bd557604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610bd557604052565b67ffffffffffffffff8111610bd557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b15610c8657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152fd5b600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416610d13811515610c7f565b90565b610d1f8161115e565b600052600460205273ffffffffffffffffffffffffffffffffffffffff6040600020541690565b15610d4d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206e6f7220617070726f7665640000000000000000000000000000000000006064820152fd5b90610df5939291610de561067e8433610e81565b610df0838383610efc565b61118e565b15610dfc57565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b9073ffffffffffffffffffffffffffffffffffffffff8080610ea284610ce4565b16931691838314938415610ed5575b508315610ebf575b50505090565b610ecb91929350610d16565b1614388080610eb9565b909350600052600560205260406000208260005260205260ff604060002054169238610eb1565b610f0583610ce4565b9173ffffffffffffffffffffffffffffffffffffffff928380931692839116036110da578216918215611057576000908482526004602052848260408120927fffffffffffffffffffffffff000000000000000000000000000000000000000093848154169055610f7583610ce4565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258280a48282526003602052604082208054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820191821161102a57558382526003602052604082208054906001820180921161102a57558482526002602052604082208054909116841790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152fd5b600052600260205261118c73ffffffffffffffffffffffffffffffffffffffff604060002054161515610c7f565b565b9293600093909291803b156113675794849161120f96604051809481937f150b7a02000000000000000000000000000000000000000000000000000000009788845233600485015273ffffffffffffffffffffffffffffffffffffffff80921660248501526044840152608060648401528260209b8c976084830190610ab0565b0393165af184918161130f575b506112e6575050503d6000146112de573d61123681610c45565b906112446040519283610c04565b81528091833d92013e5b805191826112db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b01fd5b50606061124e565b7fffffffff00000000000000000000000000000000000000000000000000000000161492509050565b9091508581813d8311611360575b6113278183610c04565b8101031261037957517fffffffff000000000000000000000000000000000000000000000000000000008116810361037957903861121c565b503d61131d565b50505091505060019056fea26469706673582212209e32690bb6fb44cf6dce090b04f09a5d04c48ee27f4a264c58be1af1a130298864736f6c63430008130033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
