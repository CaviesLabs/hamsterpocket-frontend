/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PocketRegistry,
  PocketRegistryInterface,
} from "../../contracts/PocketRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "mintAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "AddressWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalDepositedBaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSwappedBaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReceivedTargetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClosedPositionInTargetTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReceivedFundInBaseTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseTokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetTokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executedBatchAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextScheduledExecutionAt",
            type: "uint256",
          },
          {
            internalType: "enum Types.PocketStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Types.Pocket",
        name: "pocketData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PocketInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalDepositedBaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSwappedBaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReceivedTargetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClosedPositionInTargetTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReceivedFundInBaseTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseTokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetTokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executedBatchAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextScheduledExecutionAt",
            type: "uint256",
          },
          {
            internalType: "enum Types.PocketStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Types.Pocket",
        name: "pocketData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PocketUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPERATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAYER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedInteractiveAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "blacklistedIdMap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "getBalanceInfoOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "getOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "getStopConditionsOf",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum Types.StopConditionOperator",
            name: "operator",
            type: "uint8",
          },
        ],
        internalType: "struct Types.StopCondition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "getTradingInfoOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum Types.AMMRouterVersion",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value1",
            type: "uint256",
          },
          {
            internalType: "enum Types.ValueComparisonOperator",
            name: "operator",
            type: "uint8",
          },
        ],
        internalType: "struct Types.ValueComparison",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum Types.TradingStopConditionType",
            name: "stopType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Types.TradingStopCondition",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum Types.TradingStopConditionType",
            name: "stopType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Types.TradingStopCondition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initializeUserPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToClose",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToRestart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToUpdate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "isOwnerOf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "isReadyToClosePosition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "isReadyToSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "pockets",
    outputs: [
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalDepositedBaseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSwappedBaseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReceivedTargetAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalClosedPositionInTargetTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReceivedFundInBaseTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseTokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetTokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executedBatchAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextScheduledExecutionAt",
        type: "uint256",
      },
      {
        internalType: "enum Types.PocketStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "ammRouterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchVolume",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frequency",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value1",
            type: "uint256",
          },
          {
            internalType: "enum Types.ValueComparisonOperator",
            name: "operator",
            type: "uint8",
          },
        ],
        internalType: "struct Types.ValueComparison",
        name: "openingPositionCondition",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum Types.TradingStopConditionType",
            name: "stopType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Types.TradingStopCondition",
        name: "takeProfitCondition",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum Types.TradingStopConditionType",
            name: "stopType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Types.TradingStopCondition",
        name: "stopLossCondition",
        type: "tuple",
      },
      {
        internalType: "enum Types.AMMRouterVersion",
        name: "ammRouterVersion",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "shouldClosePocket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "swappedBaseTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedTargetTokenAmount",
        type: "uint256",
      },
    ],
    name: "shouldOpenPosition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "swappedTargetTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBaseTokenAmount",
        type: "uint256",
      },
    ],
    name: "shouldStopLoss",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "swappedTargetTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBaseTokenAmount",
        type: "uint256",
      },
    ],
    name: "shouldTakeProfit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.UpdatePocketParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updatePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "swappedTargetTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivedBaseTokenAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Params.UpdatePocketClosingPositionStatsParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updatePocketClosingPositionStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
        ],
        internalType: "struct Params.UpdatePocketDepositParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updatePocketDepositStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "enum Types.PocketStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct Params.UpdatePocketStatusParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updatePocketStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "swappedBaseTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivedTargetTokenAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Params.UpdatePocketTradingStatsParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updatePocketTradingStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
        ],
        internalType: "struct Params.UpdatePocketWithdrawalParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updatePocketWithdrawalStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "interactiveAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "whitelistAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234620000c6576000549060ff8260081c1662000074575060ff8082160362000038575b6040516158d19081620000cc8239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000028565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe61024080604052600436101561001457600080fd5b60003560e01c90816301ffc9a714613ba757508063125167ef14613b8b5780631416642e14613b6f5780632483e71514613b16578063248a9ca314613ac95780632f2ff15d146139de57806336568abe146138fa578063368e0b6c146137845780633740c18314612bc25780633f4ba83a14612ac85780634418eb00146102fe578063534ca7a214612a6e5780635c975abb14612a2d578063715018a61461298f5780637bc03940146128fb57806380b443c3146128675780638129fc1c146125b9578063819e8a3a146125a65780638321d278146123345780638456cb59146122375780638da5cb5b146121e55780638dea81e71461217a57806391d1485414612101578063983d2737146120a85780639888b5ab1461201557806399ba805714611f565780639d92d73714611ec1578063a217fddf14611e87578063a58b406914611d72578063a6ceadba14611d32578063b3fd1da514611c50578063b48093e114611b03578063b612f866146102fe578063b9a45aac14611a36578063bcf7a122146118f9578063bef48ddf1461187a578063c11bc90f1461175e578063d3fc80d914611738578063d547741f146116ee578063e058d724146114ac578063e138682414611313578063e256888f146112d7578063e3ba99a914610303578063e6068d01146102fe5763f2fde38b1461020f57600080fd5b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957610246613d09565b61024e61431c565b73ffffffffffffffffffffffffffffffffffffffff811615610275576102739061439b565b005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b613e04565b346102f9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020813601126102f95767ffffffffffffffff600435116102f95761022090600435360301126102f95761035b615106565b610369600480350180614a7d565b90604051908281833760ff8383019260208161012f958681520301902054166112795760209183604051948593843782019081520301902060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790556103dc4260c460043501351015614ace565b6103ed60e460043501351515614b59565b6103ff61012460043501351515614bbe565b73ffffffffffffffffffffffffffffffffffffffff610422602460043501614c23565b161561121b5773ffffffffffffffffffffffffffffffffffffffff61044b604460043501614c23565b16156111975773ffffffffffffffffffffffffffffffffffffffff610474604460043501614c23565b1660005261012d60205260ff60406000205416156111135773ffffffffffffffffffffffffffffffffffffffff6104af606460043501614c23565b161561108f5773ffffffffffffffffffffffffffffffffffffffff6104d8606460043501614c23565b1660005261012d60205260ff604060002054161561100b5773ffffffffffffffffffffffffffffffffffffffff610513608460043501614c23565b1615610f875773ffffffffffffffffffffffffffffffffffffffff61053c608460043501614c23565b1660005261012d60205260ff6040600020541615610f035760005b61056c61010460043501600435600401614c44565b90508110156105ad57806105a361059b6105a89361059561010460043501600435600401614c44565b90614c98565b351515614cd7565b614476565b610557565b610184600435013560078110156102f95780610e9c575b5060046101a48135013510156102f9576105e46101a460043501356141a2565b6101a46004350135610e85575b60046101e48135013510156102f9576106106101e460043501356141a2565b6101e46004350135610e6e575b61062b600480350180614a7d565b610639602460043501614c23565b90610648604460043501614c23565b92610657606460043501614c23565b92610666608460043501614c23565b600360a4600435013510156102f95773ffffffffffffffffffffffffffffffffffffffff61077395816106bb988180966106c26106ae61010460043501600435600401614c44565b9a909b6040519e8f613ecf565b3691613f81565b8c52600060208d0152600060408d0152600060608d0152600060808d0152600060a08d0152600060c08d0152600060e08d015260006101008d015260c460043501356101208d015260016101408d0152166101608b015216610180890152166101a0870152166101c085015260c460043501356101e085015260e4600435013561020085015261012460043501356102208501526107663661014460043501614dc7565b6102408501523691614e03565b610260820152610789366101a460043501614e81565b61028082015261079f366101e460043501614e81565b6102a08201526107b960a460043501356102c08301614eb3565b60206107c9600480350180614a7d565b919082604051938492833761012e8183015281010301902090805191825167ffffffffffffffff8111610d2e576108008254614066565b601f8111610e2a575b506020601f8211600114610d685781929394600092610d5d575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161781555b6020820151600182015560408201516002820155606082015160038201556080820151600482015560a0820151600582015560c0820151600682015560e08201516007820155610100820151600882015561012082015160098201556101408201516005811015610c09576108ce600a83019182614ebf565b6101608301517fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff0083549260081b169116179055600b810173ffffffffffffffffffffffffffffffffffffffff61018084015116907fffffffffffffffffffffffff00000000000000000000000000000000000000009182825416179055600c820173ffffffffffffffffffffffffffffffffffffffff6101a08501511682825416179055600d82019073ffffffffffffffffffffffffffffffffffffffff6101c085015116908254161790556101e0820151600e820155610200820151600f820155610220820151601082015561024082015180516011830155602081015160128301556040601383019101516007811015610c095760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055610260820151805190680100000000000000008211610d2e576014830154826014850155808310610c95575b506020016014830160005260206000206000915b838310610c3857856102c0601987602060158201610280860151908151610a8b816141a2565b610a94816141a2565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055015160168201556020601782016102a0860151908151610ade816141a2565b610ae7816141a2565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905501516018820155019101516003811015610c095760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055610b65600435600401600435600401614a7d565b907f466423c9888561ac7fb24e1c205f3eddd9dfee31c09948834b65aecd478d405673ffffffffffffffffffffffffffffffffffffffff610bf8610bad602460043501614c23565b93610bea6020610bc1600480350180614a7d565b9190826040519384928337810161012e8152030190209160405197606089526060890191614ef6565b908682036020880152614f48565b9242604086015216928033930390a3005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002602082600193518051865582858701910151610c55816141a2565b610c5e816141a2565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905501920192019190610a65565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082168203610cff5783168303610cff576014840160005260206000208360011b81015b8260011b82018110610ced575050610a51565b60008082556001820155600201610cda565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b015190508480610823565b8260005260206000209060005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084168110610e1257506001939495837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0811610610ddb575b505050811b018155610855565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055848080610dce565b9091602060018192858a015181550193019101610d75565b826000526020600020601f830160051c810160208410610e67575b601f830160051c82018110610e5b575050610809565b60008155600101610e45565b5080610e45565b610e8061020460043501351515614d62565b61061d565b610e976101c460043501351515614d62565b6105f1565b60058114908115610ef8575b5015610ee157610ec961014460043501358015159081610ecf575b50614d62565b806105c4565b90506101646004350135101582610ec3565b610ef361014460043501351515614d62565b610ec9565b600691501481610ea8565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f416464726573733a20746172676574546f6b656e41646472657373206973206e60448201527f6f742077686974656c69737465640000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f416464726573733a20696e76616c696420746172676574546f6b656e4164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f416464726573733a2062617365546f6b656e41646472657373206973206e6f7460448201527f2077686974656c697374656400000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f416464726573733a20696e76616c69642062617365546f6b656e41646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f416464726573733a20616d6d526f7574657241646472657373206973206e6f7460448201527f2077686974656c697374656400000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f416464726573733a20696e76616c696420616d6d526f7574657241646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f416464726573733a20696e76616c6964206f776e6572000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f49443a20746865206964206973206e6f7420756e6971756500000000000000006044820152fd5b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f9576020604051620f42408152f35b346102f9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040813601126102f95760043567ffffffffffffffff8082116102f9576060826004019383360301126102f9576024359081116102f95761137e903690600401613c63565b611389939193615106565b61139282614c23565b73ffffffffffffffffffffffffffffffffffffffff90811660009081527fdff3dc04e5be5d758e3cbf436c1eaac83caf9b19278dbb9a033498f210d28585602052604090205490919060ff168015611482575b6113ee906156b8565b60248401604460206114008387614a7d565b9190826040519384928337810161012e8152030190209501359360058510156102f9578561146261147d9361145c7fd8846a9aa5a013feb235c58919c113c6bc896ff1ee04c8fdf9763ab6924d63c198600a61146a9b01614ebf565b83614a7d565b979092614c23565b9360405195869516983398429487615743565b0390a3005b506113ee6114a56114966024870186614a7d565b61149f87614c23565b91614422565b90506113e5565b346102f9576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f9576114fc903690600401613c63565b919060405161150a81613f08565b6000815282810160009052604001600090528160405161152981613eec565b6000815201600090528160405161153f81613eec565b60008152016000905260405192808285378084019061012e91828152858573ffffffffffffffffffffffffffffffffffffffff97889303019020600b015416948060405183868237868185810187815203019020600c0154169060405183868237868185810187815203019020600d015416604051838682378681858101878152030190206019015460ff1660405184878237878186810188815203019020600e01549060405185888237888187810189815203019020600f0154926040518689823789818881018a8152030190206010015494604051878a82378a818981018b81520301902060090154968a604051828c823781818481018d8152030190206011019a6040518382823782818d868201908152030190206015019a8360405194859384378201908152030190206017019861167a9061416e565b97611684906141ac565b9861168e906141ac565b996040519b8c528b015260408a0152606089016116aa9161426d565b608088015260a087015260c086015260e085015261010084016116cc91614233565b61016083016116da91614255565b6101a082016116e891614255565b6101e090f35b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957610273611728613ce6565b61173061431c565b60043561427a565b346102f957602061175461174b36613c91565b9291909161490e565b6040519015158152f35b346102f9576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f9576117ae903690600401613c63565b604051918181843760ff600a83850194868161012e9788815203019020015416906005821015610c095760018592149384611842575b84611820575b846117fc575b82856040519015158152f35b600994508360405194859384378201908152030190200154421015828281806117f0565b9350600e604051848382378381868101888152030190200154421015936117ea565b93506006604051848382378381868101888152030190200154600f6040518584823784818781018981520301902001541115936117e4565b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f95773ffffffffffffffffffffffffffffffffffffffff600a6118eb6118e56020943690600401613c63565b90614408565b015460081c16604051908152f35b346102f9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040813601126102f9576004359067ffffffffffffffff908183116102f9576040836004019184360301126102f9576024359182116102f95773ffffffffffffffffffffffffffffffffffffffff602461147d7fd8846a9aa5a013feb235c58919c113c6bc896ff1ee04c8fdf9763ab6924d63c1936119a561146a963690600401613c63565b9390976119b0615106565b016119cf6119ca6119c18385614a7d565b61149f86614c23565b615785565b61146260206119de8385614a7d565b9190826040519384928337810161012e815203019020916000600684015560006007840155600a830160047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905583614a7d565b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957611a6d613d09565b602435908115158092036102f95773ffffffffffffffffffffffffffffffffffffffff90611a9961431c565b16908160005261012d60205260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff83161790556040519081527f8962d218b945501046dadd801583f3157c2c995f2dfa67789f7d6793a40e841d60203392a3005b346102f957611b1136613d2c565b9091611b1b615106565b6020810191611b2983614c23565b73ffffffffffffffffffffffffffffffffffffffff90811660009081527fdff3dc04e5be5d758e3cbf436c1eaac83caf9b19278dbb9a033498f210d28585602052604090205490919060ff168015611c2f575b611b85906156b8565b6020611b918480614a7d565b9190826040519384928337810161012e815203019020936004850190815491611bbf60408701358094614901565b905560058601805490611bd760608801358093614901565b9055611be860068801918254614901565b905560078601958654928303928311610cff576114627fd8846a9aa5a013feb235c58919c113c6bc896ff1ee04c8fdf9763ab6924d63c19661147d9461146a995580614a7d565b50611b85611c49611c408580614a7d565b61149f88614c23565b9050611b7c565b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f957611c9f903690600401613c63565b604051908083833760ff600a8284019360208161012e9687815203019020015416926005841015610c0957600460209414159283611d10575b83611ceb575b5050506040519015158152f35b6007935090849183604051948593843782019081520301902001541515828080611cde565b9250600e60405183838237858185810187815203019020015442101592611cd8565b346102f957602060ff611d5b82611d4836613fe6565b8160405193828580945193849201614043565b810161012f81520301902054166040519015158152f35b346102f9576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f957611dc76118e56014923690600401613c63565b01908154611dd48161445e565b90611de26040519283613f40565b8082528282018094600052836000206000915b838310611e4f5760408051878152865181890181905289928201908960005b828110611e215784840385f35b909192826040600192828951805183520151611e3c816141a2565b8382015201960191019492919094611e14565b600286600192604051611e6181613eec565b8554815260ff8587015416611e75816141a2565b83820152815201920192019190611df5565b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957602060405160008152f35b346102f957611ecf36613d96565b9060405191818484378183019261012e93848152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c169116149182611f21575b6020836040519015158152f35b600a925060ff936020918360405194859384378201908152030190200154166005811015610c09576001602091148280611f14565b346102f95761147d61146a7fd8846a9aa5a013feb235c58919c113c6bc896ff1ee04c8fdf9763ab6924d63c173ffffffffffffffffffffffffffffffffffffffff611fa036613d2c565b91611fac969196615106565b60208101611fc06119ca6119c18385614a7d565b6114626020611fcf8385614a7d565b9190826040519384928337810161012e8152030190209160018301805490611ffc60408701358093614901565b905561200d60068501918254614901565b905583614a7d565b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f95760076120686040923690600401613c63565b8351929160209082818637600683860195838161012e98898152030190200154948387519485938437820190815203019020015482519182526020820152f35b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760206040517f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c8152f35b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957612138613ce6565b60043560005260c960205273ffffffffffffffffffffffffffffffffffffffff60406000209116600052602052602060ff604060002054166040519015158152f35b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95773ffffffffffffffffffffffffffffffffffffffff6121c6613d09565b1660005261012d602052602060ff604060002054166040519015158152f35b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957602073ffffffffffffffffffffffffffffffffffffffff60fb5416604051908152f35b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95761226e61431c565b6122766153dd565b60335460ff81166122d6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060019116176033557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152fd5b346102f95761234236613fe6565b604051818180935160208193019161235992614043565b810161012e8152036020019020604051908161237581836140b9565b036123809083613f40565b600181015460a052600281015460805260038101546101e0526004810154610160526005810154916006820154600783015460088401546009850154600a860154600b87015473ffffffffffffffffffffffffffffffffffffffff1691600c88015473ffffffffffffffffffffffffffffffffffffffff1693600d89015473ffffffffffffffffffffffffffffffffffffffff1695600e8a015497600f8b01549960108c01549b601181016124349061416e565b6101c052612444601582016141ac565b6101a052612454601782016141ac565b60e0526019015460ff16610100526040518061022052610340809152610220510161247e916141d6565b9b60a051610220516020015260805161022051604001526101e05161022051606001526101605161022051608001526102205160a001526102205160c001526102205160e00152610220516101000152610220516101200152610220516101400160ff8216906124ed91614219565b60081c73ffffffffffffffffffffffffffffffffffffffff16610220516101600152610220516101800152610220516101a00152610220516101c00152610220516101e0015261022051610200015261022051610220015261022051610240016101c0519061255b91614233565b610220516102a0016101a0519061257191614255565b610220516102e00160e0519061258691614255565b6102205161032001610100519061259c9161426d565b6102205180910390f35b346102f957602061175461149f36613d96565b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760005460ff90818160081c16159182809361285b575b8015612845575b156127c1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009183600184831617600055612792575b5061266f8160005460081c1661265081615810565b61265981615810565b836033541660335561266a81615810565b615810565b6126783361439b565b6126958160005460081c1661268c81615810565b61266a81615810565b60016065553360009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be7566020526040902054161561272c575b506126d757005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b3360008181527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be7566020526040812080549093166001179092559081907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4816126d0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016610101176000558361263b565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156126055750600181831614612605565b506001818316106125fe565b346102f95761287536613d96565b9060405191818484378183019261012e93848152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c1691161491826128c6576020836040519015158152f35b600a925060ff936020918360405194859384378201908152030190200154166005811015610c09576002602091148280611f14565b346102f95761290936613d96565b9060405191818484378183019261012e93848152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c16911614918261295a576020836040519015158152f35b600a925060ff936020918360405194859384378201908152030190200154166005811015610c09576003602091148280611f14565b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f9576129c661431c565b600073ffffffffffffffffffffffffffffffffffffffff60fb547fffffffffffffffffffffffff0000000000000000000000000000000000000000811660fb55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957602060ff603354166040519015158152f35b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f957611754612ac26020923690600401613c63565b906144a3565b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957612aff61431c565b612b076153dd565b60335460ff811615612b64577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166033557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b346102f9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040813601126102f95767ffffffffffffffff600435116102f95761018090600435360301126102f95760243567ffffffffffffffff81116102f957612c32903690600401613c63565b61014052612c3e615106565b612c4c600480350180614a7d565b90600160ff6040518484823760208186810161012f815203019020541615150361372657816020600a9273ffffffffffffffffffffffffffffffffffffffff946040519384928337810161012e815203019020015460081c16156136c8576020612cba600480350180614a7d565b9190826040519384928337810161012e81520301902090600e8201544211156136a5575b612cef604460043501351515614b59565b612d00608460043501351515614bbe565b60005b612d17606460043501600435600401614c44565b9050811015612d4457806105a361059b612d3f93610595606460043501600435600401614c44565b612d03565b50600760e4600435013510156102f95760e4600435013561363f575b610104600435013560048110156102f957612d7a816141a2565b613628575b60046101448135013510156102f957612d9e61014460043501356141a2565b6101446004350135613611575b612dbf606460043501600435600401614c44565b90600a8401549173ffffffffffffffffffffffffffffffffffffffff600b86015416610200528473ffffffffffffffffffffffffffffffffffffffff600c8201541673ffffffffffffffffffffffffffffffffffffffff600d830154169060ff60198401541661018052600183015460c05260038301546002840154906004850154600586015460068701549060078801549260088901549460098a015496612e86612e8d600e8d01549c612e7a6040518061012052613ecf565b604051928380926140b9565b0382613f40565b610120515260c051602061012051015260406101205101526060610120510152608061012051015260a061012051015260c061012051015260e061012051015261010061012051015261012080510152600560ff87161015610c095773ffffffffffffffffffffffffffffffffffffffff8660ff612f83981661014061012051015260081c16610160610120510152610200516101806101205101526101a06101205101526101c06101205101526101e06101205101526044600435013561020061012051015260846004350135610220610120510152612f733660a460043501614dc7565b6102406101205101523691614e03565b610260610120510152612f9c3661010460043501614e81565b610280610120510152612fb53661014460043501614e81565b6102a0610120510152612fd2610180516102c06101205101614eb3565b6020612fe2600480350180614a7d565b9190826040519384928337810161012e81520301902091610120515192835167ffffffffffffffff8111610d2e5761301a8254614066565b601f81116135cd575b506020601f821160011461350a5781929394956000926134ff575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161781555b610140610120516020810151600184015560408101516002840155606081015160038401556080810151600484015560a0810151600584015560c0810151600684015560e081015160078401556101008101516008840155610120810151600984015501516005811015610c09576130ec600a83019182614ebf565b61012051906101608201517fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff0083549260081b169116179055600b820173ffffffffffffffffffffffffffffffffffffffff61018083015116907fffffffffffffffffffffffff00000000000000000000000000000000000000009182825416179055600c830173ffffffffffffffffffffffffffffffffffffffff6101a08401511682825416179055600d83019073ffffffffffffffffffffffffffffffffffffffff6101c084015116908254161790556101e0810151600e830155610200810151600f8301556102208101516010830155610240810151908151601184015560208201516012840155604060138401920151916007831015610c09576102609260ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691161790550151805190680100000000000000008211610d2e576014830154826014850155808310613495575b506020016014830160005260206000206000915b8383106134385786866019876020601582016102806101205101519081516132b1816141a2565b6132ba816141a2565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055015160168201556020601782016102a0610120510151908151613307816141a2565b613310816141a2565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905501516018820155016102c06101205101516003811015610c095760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691161790557fd8846a9aa5a013feb235c58919c113c6bc896ff1ee04c8fdf9763ab6924d63c161342973ffffffffffffffffffffffffffffffffffffffff600a84015460081c169361341b60206133dc600435600401600435600401614a7d565b9190826040519384928337810161012e81520301902091613408604051966080885260808801906140b9565b9086820360208801526101405190614ef6565b908482036040860152614f48565b914260608201528033930390a3005b6002602082600193518051865582858701910151613455816141a2565b61345e816141a2565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691161790550192019201919061328a565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082168203610cff5783168303610cff576014840160005260206000208360011b81015b8260011b820181106134ed575050613276565b600080825560018201556002016134da565b01519050858061303e565b8260005260206000209060005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841681106135b55750600193949596837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081161061357e575b505050811b018155613070565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055858080613571565b9091602060018192858b015181550193019101613517565b826000526020600020601f830160051c81016020841061360a575b601f830160051c820181106135fe575050613023565b600081556001016135e8565b50806135e8565b61362361016460043501351515614d62565b612dab565b61363a61012460043501351515614d62565b612d7f565b600560e46004350135148015613695575b156136845761366e60a4600435013580151590816136735750614d62565b612d60565b905060c46004350135101584610ec3565b61366e60a460043501351515614d62565b50600660e4600435013514613650565b602460043501356136b842821015614ace565b80600e8401556009830155612cde565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f506f636b65743a20696e76616c696420706f636b6574000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f49443a20746865206964206d75737420626520657869737465640000000000006044820152fd5b346102f95761379236613d2c565b61379a615106565b6137a383614c23565b73ffffffffffffffffffffffffffffffffffffffff90811660009081527fdff3dc04e5be5d758e3cbf436c1eaac83caf9b19278dbb9a033498f210d28585602052604090205490919060ff1680156138df575b6137ff906156b8565b602084019260206138108587614a7d565b9190826040519384928337810161012e81520301902094613835601087015442614901565b60098701556008860180549060018201809211610cff5755600286019081549161386460408301358094614901565b9055600387019485549561387d60608401358098614901565b9055600688018054938403938411610cff576138cd977fd8846a9aa5a013feb235c58919c113c6bc896ff1ee04c8fdf9763ab6924d63c19761147d95611462935561200d60078c01918254614901565b16966040519485943398429487615743565b506137ff6138f3611c406020870187614a7d565b90506137f6565b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957613931613ce6565b3373ffffffffffffffffffffffffffffffffffffffff82160361395a576102739060043561427a565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957600435613a18613ce6565b613a2061431c565b8160005260c960205273ffffffffffffffffffffffffffffffffffffffff60406000209116908160005260205260ff6040600020541615613a5d57005b8160005260c9602052604060002081600052602052604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4005b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043560005260c96020526020600160406000200154604051908152f35b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760206040517fab4f864e5201b0fde9b5ee3e4cf96384802b0ffdfcf7f9de4699ce21a30afc4f8152f35b346102f9576020611754613b8236613c91565b92919091614755565b346102f9576020611754613b9e36613c91565b929190916145ee565b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957600435907fffffffff0000000000000000000000000000000000000000000000000000000082168092036102f957817f7965db0b0000000000000000000000000000000000000000000000000000000060209314908115613c39575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483613c32565b9181601f840112156102f95782359167ffffffffffffffff83116102f957602083818601950101116102f957565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126102f9576004359067ffffffffffffffff82116102f957613cda91600401613c63565b90916024359060443590565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102f957565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102f957565b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040818401126102f95760043567ffffffffffffffff918282116102f95760809082860301126102f957600401926024359182116102f957613d9291600401613c63565b9091565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126102f9576004359067ffffffffffffffff82116102f957613ddf91600401613c63565b909160243573ffffffffffffffffffffffffffffffffffffffff811681036102f95790565b346102f957613e1236613d96565b9060405191818484378183019261012e93848152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c169116149182613e9f575b82613e69576020836040519015158152f35b600a925060ff936020918360405194859384378201908152030190200154166005811015610c0957600460209114153880611f14565b915060ff600a60405183868237602081858101878152030190200154166005811015610c09576003141591613e57565b6102e0810190811067ffffffffffffffff821117610d2e57604052565b6040810190811067ffffffffffffffff821117610d2e57604052565b6060810190811067ffffffffffffffff821117610d2e57604052565b6080810190811067ffffffffffffffff821117610d2e57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610d2e57604052565b92919267ffffffffffffffff8211610d2e5760405191613fc960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184613f40565b8294818452818301116102f9578281602093846000960137010152565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126102f9576004359067ffffffffffffffff82116102f957806023830112156102f95781602461404093600401359101613f81565b90565b60005b8381106140565750506000910152565b8181015183820152602001614046565b90600182811c921680156140af575b602083101461408057565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691614075565b90600092918054916140ca83614066565b91828252600193848116908160001461412c57506001146140ec575b50505050565b90919394506000526020928360002092846000945b8386106141185750505050010190388080806140e6565b805485870183015294019385908201614101565b91505060209495507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009193501683830152151560051b010190388080806140e6565b9060405161417b81613f08565b60ff600282948054845260018101546020850152015416906007821015610c095760400152565b60041115610c0957565b906040516141b981613eec565b60206001829460ff8154166141cd816141a2565b84520154910152565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361421281518092818752878088019101614043565b0116010190565b906005821015610c095752565b906007821015610c095752565b906040806142539380518452602081015160208501520151910190614226565b565b602080918051614264816141a2565b84520151910152565b906003821015610c095752565b9060009180835260c960205273ffffffffffffffffffffffffffffffffffffffff6040842092169182845260205260ff6040842054166142b957505050565b80835260c960205260408320828452602052604083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b73ffffffffffffffffffffffffffffffffffffffff60fb5416330361433d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60fb549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff000000000000000000000000000000000000000082161760fb55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b602090826040519384928337810161012e81520301902090565b9080604051928337810161012e8152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c1691161490565b67ffffffffffffffff8111610d2e5760051b60200190565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610cff5760010190565b906014604051918084843780830161012e94858252846020809681940301902095836040519485938437820190815203019020019182549182156145e557600093845b8481106144f557505050505090565b816000528260002060019082821b019060ff818301541690614516826141a2565b81156145c457614525826141a2565b811461459e57614534816141a2565b60028082146145875750614547816141a2565b600380911461456057505061455b90614476565b6144e6565b90879161455b93989215614577575b505095614476565b860154905411159050388061456f565b8861455b9499939250921561457757505095614476565b509561455b919681156145b3575b5095614476565b9050600885015490541115386145ac565b50509561455b919681156145d9575095614476565b905054421015386145ac565b50505050600090565b909291926020604051928281853782840193828161012e96878152030190209383604051948593843782019081520301902092601184019160ff601386015416936007851015610c0957841561471057600f61464c9201549061471b565b81156146e1570491600381146146d957600481146146d057600181146146c857600281146146bf57600581146146a45760061461468b57505050600190565b54811091821561469a57505090565b6012015410919050565b505481101591826146b457505090565b601201541015919050565b50541115919050565b505410919050565b50541015919050565b505411919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b505050505050600190565b81810292918115918404141715610cff57565b908160209103126102f9575160ff811681036102f95790565b604d8111610cff57600a0a90565b906020604051928281853782840193828161012e9687815203019020938360405194859384378201908152030190209160ff60158401541690614797826141a2565b81156148f7576147a6826141a2565b6001821461483757506147b8816141a2565b6003811461481e57806147cc6002926141a2565b146147d957505050600090565b6002015490818311156148165781830392808411610cff5782620f42408086029586041491141715610cff5781156146e157601601549104101590565b505050600090565b506002015460169091015461483291614901565b111590565b92939050602073ffffffffffffffffffffffffffffffffffffffff600d600494015416604051938480927f313ce5670000000000000000000000000000000000000000000000000000000082525afa80156148eb5760ff6148a5916148ab946000916148bd575b5016614747565b9061471b565b9181156146e157601601549104101590565b6148de915060203d81116148e4575b6148d68183613f40565b81019061472e565b3861489e565b503d6148cc565b6040513d6000823e3d90fd5b5050505050600090565b91908201809211610cff57565b906020604051928281853782840193828161012e9687815203019020938360405194859384378201908152030190209160ff60178401541690614950826141a2565b81156148f75761495f826141a2565b600182146149fe5750614971816141a2565b600381146149ce57806149856002926141a2565b1461499257505050600090565b60020154908183116148165782820392828411610cff57620f4240808502948504149083141715610cff5781156146e157601801549104101590565b5060020154908183111592836149e5575b50505090565b82039250908211610cff576018015411153880806149df565b92939050602073ffffffffffffffffffffffffffffffffffffffff600d600494015416604051938480927f313ce5670000000000000000000000000000000000000000000000000000000082525afa80156148eb5760ff6148a591614a6b946000916148bd575016614747565b9181156146e157601801549104111590565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102f9570180359067ffffffffffffffff82116102f9576020019181360383136102f957565b15614ad557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f54696d657374616d703a206d75737420626520657175616c206f72206772656160448201527f746572207468616e20626c6f636b2074696d65000000000000000000000000006064820152fd5b15614b6057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f426174636820766f6c756d653a2063616e6e6f74206265207a65726f000000006044820152fd5b15614bc557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4672657175656e63793a2063616e6e6f74206265207a65726f000000000000006044820152fd5b3573ffffffffffffffffffffffffffffffffffffffff811681036102f95790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102f9570180359067ffffffffffffffff82116102f957602001918160061b360383136102f957565b9190811015614ca85760061b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b15614cde57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f53746f70436f6e646974696f6e3a2076616c7565206d757374206e6f7420626560448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b15614d6957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f56616c7565436f6d70617269736f6e3a20696e76616c69642076616c756500006044820152fd5b91908260609103126102f957604051614ddf81613f08565b60408193803583526020810135602084015201359060078210156102f95760400152565b929192614e0f8261445e565b604092614e1e84519283613f40565b819581835260208093019160061b8401938185116102f957915b848310614e4757505050505050565b85838303126102f957855190614e5c82613eec565b83358252848401359060048210156102f957828692838a950152815201920191614e38565b91908260409103126102f957604051614e9981613eec565b8092803560048110156102f9578252602090810135910152565b6003821015610c095752565b906005811015610c095760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b600160209160ff8154166141cd816141a2565b90614f5a6103608083528201836140b9565b916001908181015493602094858501526002928383015491604092838701526003840154606087015260048401546080870152600584015460a0870152600684015460c0870152600784015460e087015260088401546101008701526009840154610120870152600a8401549460ff95614fda6101408901888316614219565b73ffffffffffffffffffffffffffffffffffffffff809160081c1661016089015280600b8701541661018089015280600c870154166101a0890152600d860154166101c0880152600e8501546101e0880152600f85015461020088015260108501546102208801526011850154610240880152601285015461026088015261506d86601387015416610280890190614226565b60148501978783036102a089015280895493848152019860005280600020946000915b8483106150d6575050505050505082916019610340926150ba6102c0614040970160158301614f35565b6150cb610300860160178301614f35565b01541691019061426d565b90919293948483889c8b848b819c5484520154166150f3816141a2565b81860152019b0196959493019190615090565b3360009081527fababaf7989d9b96df7f991dae98f597c453af71e297bb6242f6602d99c1a6579602090815260408083205490927fab4f864e5201b0fde9b5ee3e4cf96384802b0ffdfcf7f9de4699ce21a30afc4f9160ff161561516a5750505050565b61517333615543565b9184519061518082613f24565b604282528482019260603685378251156153b057603084538251906001918210156153b05790607860218501536041915b8183116152e55750505061528957604861528593869361524f9361524098519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a86015261520b815180928c603789019101614043565b8401917f206973206d697373696e6720726f6c6520000000000000000000000000000000603784015251809386840190614043565b01036028810187520185613f40565b519283927f08c379a0000000000000000000000000000000000000000000000000000000008452600484015260248301906141d6565b0390fd5b6064848651907f08c379a000000000000000000000000000000000000000000000000000000000825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015615383577f3031323334353637383961626364656600000000000000000000000000000000901a6153228587615532565b5360041c928015615356577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0191906151b1565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526032600452fd5b3360009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756602090815260408083205490929060ff161561541f57505050565b61542833615543565b908084519061543682613f24565b604282528482019260603685378251156153b057603084538251906001918210156153b05790607860218501536041915b8183116154c15750505061528957604861528593869361524f9361524098519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a86015261520b815180928c603789019101614043565b909192600f81166010811015615383577f3031323334353637383961626364656600000000000000000000000000000000901a6154fe8587615532565b5360041c928015615356577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190615467565b908151811015614ca8570160200190565b6040519061555082613f08565b602a8252602082016040368237825115614ca857603090538151600190811015614ca857607860218401536029905b8082116155ed57505061558f5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f8116601081101561568a577f3031323334353637383961626364656600000000000000000000000000000000901a6156298486615532565b5360041c91801561565c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019061557f565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b156156bf57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f7065726174696f6e206572726f723a206f7065726174696f6e206973206e6f60448201527f74207065726d69747465640000000000000000000000000000000000000000006064820152fd5b9695949192606094615764615772936157809660808c5260808c0191614ef6565b9189830360208b0152614ef6565b908682036040880152614f48565b930152565b1561578c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5065726d697373696f6e3a206e6f74207065726d6974746564206f706572617460448201527f696f6e00000000000000000000000000000000000000000000000000000000006064820152fd5b1561581757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fdfea264697066735822122027411219ce088489e05a504f38f4aa4d8c9478bac31cb65cc6eb6ad41a92971f64736f6c63430008130033";

type PocketRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PocketRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PocketRegistry__factory extends ContractFactory {
  constructor(...args: PocketRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PocketRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PocketRegistry__factory {
    return super.connect(runner) as PocketRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PocketRegistryInterface {
    return new Interface(_abi) as PocketRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PocketRegistry {
    return new Contract(address, _abi, runner) as unknown as PocketRegistry;
  }
}
