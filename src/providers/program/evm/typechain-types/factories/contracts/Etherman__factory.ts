/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Etherman, EthermanInterface } from "../../contracts/Etherman";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
    ],
    name: "unwrapWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361049590816100618239f35b600080fdfe60406080815260048036101561001f575b5050361561001d57600080fd5b005b600091823560e01c8063715018a6146103665780638da5cb5b14610340578063e16d9ce5146101495763f2fde38b146100585750610010565b34610145576020366003190112610145578135916001600160a01b0391828416809403610141576100876103cf565b83156100d85750506000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b8280fd5b503461014557806003193601126101455781356024918235916001600160a01b03831680930361033c5761017b6103cf565b8151927f23b872dd000000000000000000000000000000000000000000000000000000008452338685015230858501528160448501528660209473bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c90868160648186865af18015610332576102ff575b50803b156102fb578190878651809481937f2e1a7d4d000000000000000000000000000000000000000000000000000000008352888d8401525af180156102f1576102c2575b508680809381935af13d156102bd573d67ffffffffffffffff81116102ab5782519061025a601f8201601f1916860183610427565b815286843d92013e5b1561026c578480f35b5162461bcd60e51b8152928301526019908201527f4572726f723a2063616e6e6f7420756e777261702057455448000000000000006044820152606490fd5b8487604188634e487b7160e01b835252fd5b610263565b67ffffffffffffffff8198929398116102df578352959038610225565b8582604189634e487b7160e01b835252fd5b84513d8a823e3d90fd5b5080fd5b8681813d831161032b575b6103148183610427565b810103126101455751801515036102fb57386101df565b503d61030a565b86513d85823e3d90fd5b8580fd5b8382346102fb57816003193601126102fb576001600160a01b0360209254169051908152f35b83346103cc57806003193601126103cc5761037f6103cf565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b6001600160a01b036000541633036103e357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761044957604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c6bf0bc1aa4c8885dc95faeacc3ac72274f09e71f5dc506f9d9a4f2930e8765b64736f6c63430008130033";

type EthermanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthermanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Etherman__factory extends ContractFactory {
  constructor(...args: EthermanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Etherman> {
    return super.deploy(overrides || {}) as Promise<Etherman>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Etherman {
    return super.attach(address) as Etherman;
  }
  override connect(signer: Signer): Etherman__factory {
    return super.connect(signer) as Etherman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthermanInterface {
    return new utils.Interface(_abi) as EthermanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Etherman {
    return new Contract(address, _abi, signerOrProvider) as Etherman;
  }
}
