/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockedERC721,
  MockedERC721Interface,
} from "../../../contracts/mock/MockedERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200035d576001600160401b039060408181018381118382101762000347578152600c82526020916b4d6f636b656445524337323160a01b83820152815193828501858110828211176200034757835260078552664d45524337323160c81b84860152815181811162000347576000948554916001948584811c941680156200033c575b8385101462000328578190601f94858111620002d5575b5083908583116001146200027157899262000265575b5050600019600383901b1c191690851b1786555b8651928311620002515783548481811c9116801562000246575b828210146200023257828111620001ea575b50809183116001146200018357508495829394959262000177575b5050600019600383901b1c191690821b1790555b60068054336001600160a01b03198216811790925591519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3611b2b9081620003638239f35b0151905038806200010e565b90601f198316968487528287209287905b898210620001d2575050838596979810620001b8575b505050811b01905562000122565b015160001960f88460031b161c19169055388080620001aa565b80878596829496860151815501950193019062000194565b8487528187208380860160051c82019284871062000228575b0160051c019085905b8281106200021c575050620000f3565b8881550185906200020c565b9250819262000203565b634e487b7160e01b87526022600452602487fd5b90607f1690620000e1565b634e487b7160e01b86526041600452602486fd5b015190503880620000b3565b898052848a208894509190601f1984168b5b87828210620002be5750508411620002a4575b505050811b018655620000c7565b015160001960f88460031b161c1916905538808062000296565b8385015186558b9790950194938401930162000283565b9091508880528389208580850160051c8201928686106200031e575b918991869594930160051c01915b8281106200030f5750506200009d565b8b8155859450899101620002ff565b92508192620002f1565b634e487b7160e01b88526022600452602488fd5b93607f169362000086565b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146110535750806306fdde0314610f6a578063081812fc14610f17578063095ea7b314610d1957806323b872dd14610cf457806342842e0e14610cc05780636352211e14610c6557806370a0823114610b76578063715018a614610ad85780638da5cb5b14610a8557806395d89b4114610929578063a144819414610779578063a22cb46514610647578063b88d4fde14610576578063c87b56dd14610296578063e985e9c5146102195763f2fde38b146100de57600080fd5b346102155760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610215576101156111a7565b9061011e611318565b73ffffffffffffffffffffffffffffffffffffffff809216928315610192575050600654827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b50503461029257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102925760ff816020936102576111a7565b61025f6111cf565b73ffffffffffffffffffffffffffffffffffffffff91821683526005875283832091168252855220549151911615158152f35b5080fd5b5091903461029257602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105735783356103016102fc82600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416151590565b611397565b82519483860186811067ffffffffffffffff82111761054757845260138652848601907f68747470733a2f2f676f6f676c652e636f6d2f00000000000000000000000000825282839185947a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000908181101561053a575b5050876d04ee2d6d415b85acef81000000008085101561052c575b5050662386f26fc100008084101561051d575b506305f5e1008084101561050e575b5061271080841015610500575b505060648210156104f0575b600a809210156104e6575b600190816021818701966103fe6103e9896112de565b986103f68c519a8b61129d565b808a526112de565b987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c8a019a01368b3750870101905b610485575b610457896104818a610472838f8d8d6104668e87519a8b9551809288880190611141565b84019151809386840190611141565b0103808752018561129d565b51928284938452830190611164565b0390f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff849101917f30313233343536373839616263646566000000000000000000000000000000008282061a8353049182156104e15791908261042e565b610433565b92600101926103d3565b92906064600291049101926103c8565b9401939091049038806103bc565b600891959304920193386103af565b601091959304920193386103a0565b95019490920491873861038d565b8896500492503880610372565b6024846041847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b80fd5b5090346102155760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610215576105af6111a7565b906105b86111cf565b604435906064359467ffffffffffffffff8611610643573660238701121561064357850135936105f36105ea866112de565b9451948561129d565b8484528636602487890101116105735760208661063b9760246106409a01838901378601015261062b610626843361159c565b611485565b6106368383836116a2565b611a04565b611510565b80f35b8680fd5b50903461021557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102155761067f6111a7565b90602435918215158093036107755773ffffffffffffffffffffffffffffffffffffffff1692833314610719575033845260056020528084208385526020528084207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b5082903461029257827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610292576107b26111a7565b602435906107be611318565b8451926107ca84611252565b84845273ffffffffffffffffffffffffffffffffffffffff82169081156108cc57509161064093918161063b948861082e61082884600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416151590565b15611a90565b61085e61082884600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416151590565b81895260036020528089206001815401905582895260026020528820817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4611826565b60649060208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b50913461057357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610573578151918160019283549384811c91818616958615610a7b575b6020968785108114610a4f578899509688969785829a529182600014610a0a5750506001146109af575b505050610481929161047291038561129d565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106109f2575050508201018161047261048161099c565b8054848a0186015288955087949093019281016109d9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b860190930193508492506104729150610481905061099c565b60248360228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b92607f1692610972565b50503461029257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102925760209073ffffffffffffffffffffffffffffffffffffffff600654169051908152f35b833461057357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261057357610b0f611318565b8073ffffffffffffffffffffffffffffffffffffffff6006547fffffffffffffffffffffffff00000000000000000000000000000000000000008116600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346102925760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102925773ffffffffffffffffffffffffffffffffffffffff610bc56111a7565b16908115610be25760208480858581526003845220549051908152f35b60849060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152fd5b5091346105735760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610573575073ffffffffffffffffffffffffffffffffffffffff610cb8602093356113fc565b915191168152f35b5050346102925761063b61064091610cd7366111f2565b91925192610ce484611252565b86845261062b610626843361159c565b833461057357610640610d06366111f2565b91610d14610626843361159c565b6116a2565b503461021557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261021557610d506111a7565b906024359273ffffffffffffffffffffffffffffffffffffffff918280610d76876113fc565b16941693808514610e9457803314908115610e75575b5015610df3578486526020528420827fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055610dcb836113fc565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff828720541638610d8c565b50602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152fd5b5091346105735760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610573575073ffffffffffffffffffffffffffffffffffffffff610cb86020933561142e565b50913461057357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105735781519181825492600184811c91818616958615611049575b6020968785108114610a4f578899509688969785829a529182600014610a0a575050600114610fee57505050610481929161047291038561129d565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410611031575050508201018161047261048161099c565b8054848a018601528895508794909301928101611018565b92607f1692610fb2565b925050346102155760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261021557357fffffffff00000000000000000000000000000000000000000000000000000000811680910361021557602092507f80ac58cd000000000000000000000000000000000000000000000000000000008114908115611117575b81156110ed575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386110e6565b7f5b5e139f00000000000000000000000000000000000000000000000000000000811491506110df565b60005b8381106111545750506000910152565b8181015183820152602001611144565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936111a081518092818752878088019101611141565b0116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036111ca57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036111ca57565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126111ca5773ffffffffffffffffffffffffffffffffffffffff9060043582811681036111ca579160243590811681036111ca579060443590565b6020810190811067ffffffffffffffff82111761126e57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761126e57604052565b67ffffffffffffffff811161126e57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b73ffffffffffffffffffffffffffffffffffffffff60065416330361133957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b1561139e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152fd5b600052600260205273ffffffffffffffffffffffffffffffffffffffff6040600020541661142b811515611397565b90565b61145e6102fc82600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416151590565b600052600460205273ffffffffffffffffffffffffffffffffffffffff6040600020541690565b1561148c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152fd5b1561151757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b9073ffffffffffffffffffffffffffffffffffffffff80806115bd846113fc565b169316918383149384156115f0575b5083156115da575b50505090565b6115e69192935061142e565b16143880806115d4565b909350600052600560205260406000208260005260205260ff6040600020541692386115cc565b1561161e57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152fd5b906116d7916116b0846113fc565b9173ffffffffffffffffffffffffffffffffffffffff938493848094169485911614611617565b169182156117a357816116f4916116ed866113fc565b1614611617565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60008481526004602052604081207fffffffffffffffffffffffff0000000000000000000000000000000000000000908181541690558382526003602052604082207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b9192600092909190803b156119fa576118a29460405180927f150b7a020000000000000000000000000000000000000000000000000000000094858352336004840152876024840152604483015260806064830152818773ffffffffffffffffffffffffffffffffffffffff8260209b8c976084830190611164565b0393165af18491816119a2575b50611979575050503d600014611971573d6118c9816112de565b906118d7604051928361129d565b81528091833d92013e5b8051918261196e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b01fd5b5060606118e1565b7fffffffff00000000000000000000000000000000000000000000000000000000161492509050565b9091508581813d83116119f3575b6119ba818361129d565b8101031261077557517fffffffff00000000000000000000000000000000000000000000000000000000811681036107755790386118af565b503d6119b0565b5050915050600190565b9293600093909291803b15611a85579484916118a296604051809481937f150b7a02000000000000000000000000000000000000000000000000000000009788845233600485015273ffffffffffffffffffffffffffffffffffffffff80921660248501526044840152608060648401528260209b8c976084830190611164565b505050915050600190565b15611a9757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152fdfea2646970667358221220d214a3ba3831e166f506c6752ec7f1f7be41195e6bb681c10c7d3442c66bd6f164736f6c63430008130033";

type MockedERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockedERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockedERC721__factory extends ContractFactory {
  constructor(...args: MockedERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockedERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockedERC721__factory {
    return super.connect(runner) as MockedERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockedERC721Interface {
    return new Interface(_abi) as MockedERC721Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockedERC721 {
    return new Contract(address, _abi, runner) as unknown as MockedERC721;
  }
}
