/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockedERC721,
  MockedERC721Interface,
} from "../../../contracts/mock/MockedERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080346200035d576001600160401b039060408181018381118382101762000347578152600c82526020916b4d6f636b656445524337323160a01b83820152815193828501858110828211176200034757835260078552664d45524337323160c81b84860152815181811162000347576000948554916001948584811c941680156200033c575b8385101462000328578190601f94858111620002d5575b5083908583116001146200027157899262000265575b5050600019600383901b1c191690851b1786555b8651928311620002515783548481811c9116801562000246575b828210146200023257828111620001ea575b50809183116001146200018357508495829394959262000177575b5050600019600383901b1c191690821b1790555b60068054336001600160a01b03198216811790925591519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36114a09081620003638239f35b0151905038806200010e565b90601f198316968487528287209287905b898210620001d2575050838596979810620001b8575b505050811b01905562000122565b015160001960f88460031b161c19169055388080620001aa565b80878596829496860151815501950193019062000194565b8487528187208380860160051c82019284871062000228575b0160051c019085905b8281106200021c575050620000f3565b8881550185906200020c565b9250819262000203565b634e487b7160e01b87526022600452602487fd5b90607f1690620000e1565b634e487b7160e01b86526041600452602486fd5b015190503880620000b3565b898052848a208894509190601f1984168b5b87828210620002be5750508411620002a4575b505050811b018655620000c7565b015160001960f88460031b161c1916905538808062000296565b8385015186558b9790950194938401930162000283565b9091508880528389208580850160051c8201928686106200031e575b918991869594930160051c01915b8281106200030f5750506200009d565b8b8155859450899101620002ff565b92508192620002f1565b634e487b7160e01b88526022600452602488fd5b93607f169362000086565b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610b095750806306fdde0314610a3e578063081812fc14610a16578063095ea7b31461088f57806323b872dd1461086a57806342842e0e146108365780636352211e1461080657806370a082311461075c578063715018a6146107015780638da5cb5b146106d957806395d89b41146105d2578063a144819414610463578063a22cb46514610394578063b88d4fde146102e1578063c87b56dd1461020e578063e985e9c5146101bc5763f2fde38b146100de57600080fd5b346101b85760203660031901126101b8576100f7610c21565b90610100610d13565b6001600160a01b0380921692831561014f575050600654826001600160a01b0319821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b50503461020a578060031936011261020a5760ff816020936101dc610c21565b6101e4610c3c565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b5082903461020a57602091826003193601126102de57506102ab926102cb836102da933561025a6102558260005260026020526001600160a01b0360406000205416151590565b610d6b565b83519061026682610cb9565b60138252610299838301917f68747470733a2f2f676f6f676c652e636f6d2f00000000000000000000000000835261133f565b90855198899351809286860190610bd9565b82016102bf82518093868085019101610bd9565b01038087520185610cd5565b51928284938452830190610bfc565b0390f35b80fd5b5090346101b85760803660031901126101b8576102fc610c21565b90610305610c3c565b604435906064359467ffffffffffffffff86116103905736602387011215610390578501359361034061033786610cf7565b94519485610cd5565b8484528636602487890101116102de5760208661038897602461038d9a0183890137860101526103786103738433610efb565b610e18565b610383838383610f69565b6112d9565b610e89565b80f35b8680fd5b5090346101b857806003193601126101b8576103ae610c21565b906024359182151580930361045f576001600160a01b03169283331461041d5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b5091903461020a578060031936011261020a5761047e610c21565b6024359061048a610d13565b82519261049684610c87565b8484526001600160a01b03821690811561058f576104ca8460005260026020526001600160a01b0360406000205416151590565b61054d5781865260036020528086208054906001820180921161053a57558386526002602052852080546001600160a01b0319168217905561038d9361038893909290918290877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a461113b565b60248860118b634e487b7160e01b835252fd5b5162461bcd60e51b8152602081880152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b866020606492519162461bcd60e51b8352820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b5091346102de57806003193601126102de578151918160019283549384811c918186169586156106cf575b60209687851081146106bc578899509688969785829a52918260001461069557505060011461063a575b5050506102da92916102cb910385610cd5565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061067d57505050820101816102cb6102da610627565b8054848a018601528895508794909301928101610664565b60ff19168782015293151560051b860190930193508492506102cb91506102da9050610627565b60248360228c634e487b7160e01b835252fd5b92607f16926105fd565b50503461020a578160031936011261020a576020906001600160a01b03600654169051908152f35b83346102de57806003193601126102de5761071a610d13565b806001600160a01b036006546001600160a01b03198116600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082903461020a57602036600319011261020a576001600160a01b03610780610c21565b1690811561079d5760208480858581526003845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152fd5b5091346102de5760203660031901126102de57506001600160a01b0361082e60209335610db6565b915191168152f35b50503461020a5761038861038d9161084d36610c52565b9192519261085a84610c87565b8684526103786103738433610efb565b83346102de5761038d61087c36610c52565b9161088a6103738433610efb565b610f69565b50346101b857816003193601126101b8576108a8610c21565b90602435926001600160a01b039182806108c187610db6565b169416938085146109ad5780331490811561098e575b5015610926578486526020528420826001600160a01b03198254161790556108fe83610db6565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152fd5b90508652600560205281862033875260205260ff8287205416386108d7565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152fd5b5091346102de5760203660031901126102de57506001600160a01b0361082e60209335610ddb565b5091346102de57806003193601126102de5781519181825492600184811c91818616958615610aff575b60209687851081146106bc578899509688969785829a529182600014610695575050600114610aa4575050506102da92916102cb910385610cd5565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610ae757505050820101816102cb6102da610627565b8054848a018601528895508794909301928101610ace565b92607f1692610a68565b925050346101b85760203660031901126101b857357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101b857602092507f80ac58cd000000000000000000000000000000000000000000000000000000008114908115610baf575b8115610b85575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610b7e565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150610b77565b60005b838110610bec5750506000910152565b8181015183820152602001610bdc565b90602091610c1581518092818552858086019101610bd9565b601f01601f1916010190565b600435906001600160a01b0382168203610c3757565b600080fd5b602435906001600160a01b0382168203610c3757565b6060906003190112610c37576001600160a01b03906004358281168103610c3757916024359081168103610c37579060443590565b6020810190811067ffffffffffffffff821117610ca357604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610ca357604052565b90601f8019910116810190811067ffffffffffffffff821117610ca357604052565b67ffffffffffffffff8111610ca357601f01601f191660200190565b6001600160a01b03600654163303610d2757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610d7257565b606460405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152fd5b60005260026020526001600160a01b0360406000205416610dd8811515610d6b565b90565b610dfe6102558260005260026020526001600160a01b0360406000205416151590565b60005260046020526001600160a01b036040600020541690565b15610e1f57565b608460405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206e6f7220617070726f7665640000000000000000000000000000000000006064820152fd5b15610e9057565b60405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b906001600160a01b038080610f0f84610db6565b16931691838314938415610f42575b508315610f2c575b50505090565b610f3891929350610ddb565b1614388080610f26565b909350600052600560205260406000208260005260205260ff604060002054169238610f1e565b610f7283610db6565b916001600160a01b03928380931692839116036110d1578216918215611068576000908482526004602052848260408120926001600160a01b031993848154169055610fbd83610db6565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258280a4828252600360205260408220805460001981019190821161105457558382526003602052604082208054906001820180921161105457558482526002602052604082208054909116841790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4565b602484634e487b7160e01b81526011600452fd5b608460405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152fd5b9192600092909190803b156112cf57611191946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281876001600160a01b038260209b8c976084830190610bfc565b0393165af1849181611277575b5061124e575050503d600014611246573d6111b881610cf7565b906111c66040519283610cd5565b81528091833d92013e5b805191826112435760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b01fd5b5060606111d0565b7fffffffff00000000000000000000000000000000000000000000000000000000161492509050565b9091508581813d83116112c8575b61128f8183610cd5565b8101031261045f57517fffffffff000000000000000000000000000000000000000000000000000000008116810361045f57903861119e565b503d611285565b5050915050600190565b9293600093909291803b15611334579484916111919660405180948193630a85bd0160e11b978884523360048501526001600160a01b0380921660248501526044840152608060648401528260209b8c976084830190610bfc565b505050915050600190565b80156114305780816000925b611416575061135982610cf7565b916113676040519384610cd5565b808352601f1961137682610cf7565b01908260209236848701375b61138c5750505090565b6000198101908111611400578092600a91603083830681018091116114005786518210156113ea5760f81b7fff000000000000000000000000000000000000000000000000000000000000001660001a908601840153049182611382565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b90916000198114611400576001019190600a90048061134b565b5060405161143d81610cb9565b600181527f300000000000000000000000000000000000000000000000000000000000000060208201529056fea2646970667358221220afae4a5f2a13e0c77100b7e05640711eee6f980746ae5ae0570699e5496dd2d464736f6c63430008130033";

type MockedERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockedERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockedERC721__factory extends ContractFactory {
  constructor(...args: MockedERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockedERC721> {
    return super.deploy(overrides || {}) as Promise<MockedERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockedERC721 {
    return super.attach(address) as MockedERC721;
  }
  override connect(signer: Signer): MockedERC721__factory {
    return super.connect(signer) as MockedERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockedERC721Interface {
    return new utils.Interface(_abi) as MockedERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockedERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockedERC721;
  }
}
