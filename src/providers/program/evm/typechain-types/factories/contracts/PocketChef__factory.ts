/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PocketChef,
  PocketChefInterface,
} from "../../contracts/PocketChef";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "RegistryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "VaultUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "closePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createPocketAndDepositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "createPocketAndDepositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "pausePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract PocketRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "restartPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "tryClosingPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "tryMakingDCASwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.UpdatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "updatePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract PocketVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100c2576000549060ff8260081c16610070575060ff80821610610035575b6040516132799081620000c88239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80631cbe264a14611ce257806331fb67c214611a9057806333ad57e414611a3e5780633f4ba83a146119a15780635c975abb1461197e5780635e54c034146117375780636817031b146116bb578063715018a61461165257806377c76321146116085780637b103999146115e15780637fa97c26146114715780638129fc1c146112ed5780638456cb591461124d5780638da5cb5b146112265780639c89bb3d14610ef6578063a91ee0dc14610e7d578063ac9650d814610c18578063aea7ed3714610bf3578063cac9c00114610613578063cbfc305b14610481578063dc6514b61461040f578063e3135f0e146103f8578063e4a479b514610200578063f2fde38b146101595763fbfa77cf1461013057600080fd5b3461015657806003193601126101565760206001600160a01b0360fc5416604051908152f35b80fd5b50346101565760203660031901126101565761017361223f565b61017b6122dc565b6001600160a01b038116156101965761019390612334565b80f35b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b50346101565760031990602036830181136103f45760043567ffffffffffffffff81116103f057610235903690600401612211565b90936001600160a01b0360fb54166040517f80b443c300000000000000000000000000000000000000000000000000000000815284818061027b33888c60048501612891565b0381855afa9081156103e55786916103b8575b501561034e576102b08596604051946102a6866123cf565b3386523691612490565b8484015260016040840152803b1561034a57849283604061030d947f555345525f5245535441525445445f504f434b455400000000000000000000008251988997889663384e1a0960e21b8852856004890152604488019061297d565b868103938401602488015260158152015201925af1801561033f5761032f5750f35b610338906123bb565b6101565780f35b6040513d84823e3d90fd5b8480fd5b6084846040519062461bcd60e51b82526004820152602660248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420726573746172742060448201527f706f636b657400000000000000000000000000000000000000000000000000006064820152fd5b6103d89150853d87116103de575b6103d08183612407565b810190612879565b3861028e565b503d6103c6565b6040513d88823e3d90fd5b8280fd5b5080fd5b50346101565761019361040a366122a9565b61267a565b5034610156576003196040368201126103f4576004359067ffffffffffffffff82116103f057610200908260040192360301126103f4576104706104799161045c6002606554141561282e565b600260655561046a8161267a565b80612441565b60243591612f5f565b600160655580f35b50346101565760031990602036830181136103f45760043567ffffffffffffffff81116103f0576104b6903690600401612211565b90936001600160a01b0360fb54166040517fe6068d010000000000000000000000000000000000000000000000000000000081528481806104fc33888c60048501612891565b0381855afa9081156103e55786916105f6575b50156105a6576105278596604051946102a6866123cf565b8484015260036040840152803b1561034a578492836040610584947f555345525f434c4f5345445f504f434b455400000000000000000000000000008251988997889663384e1a0960e21b8852856004890152604488019061297d565b868103938401602488015260128152015201925af1801561033f5761032f5750f35b6084846040519062461bcd60e51b825260048201526024808201527f4f7065726174696f6e206572726f723a2063616e6e6f7420636c6f736520706f60448201526318dad95d60e21b6064820152fd5b61060d9150853d87116103de576103d08183612407565b3861050f565b50346101565760031990602036830181136103f45760043567ffffffffffffffff81116103f057610648903690600401612211565b61065a6002606596939654141561282e565b60026065556001600160a01b03948560fb54169160405163983d273760e01b81528581600481875afa8015610b115786908890610bbf575b604051632474521560e21b8152600481019190915233602482015291508180604481015b0381875afa908115610b1157906106d4918891610ba2575b50612a2b565b6040517fc11bc90f00000000000000000000000000000000000000000000000000000000815285600482015285816024958180610714898201888a612567565b03915afa908115610b11578791610b85575b5015610b1c578660fc5416966040805180997f6afd431a000000000000000000000000000000000000000000000000000000008252886004830152818a816107718a8201898b612567565b03925af18015610b115787988891610adc575b5060fb546040517f125167ef00000000000000000000000000000000000000000000000000000000815290831691908881806107c6858f8a8c60048601612a9c565b0381865afa908115610ad1578a91610ab4575b5015610a4b578899604051926107ee84612389565b3384526107fc368789612490565b938a81019485526040810192835260608101938452813b15610a47578b8693819560405197889687957f368e0b6c00000000000000000000000000000000000000000000000000000000875260048701604090525116604486015251606485016080905260c4850161086d91612269565b915160848501525160a48401528c838203918d83018d860152601e8152017f4f50455241544f525f555044415445445f54524144494e475f535441545300009052604001925af1908115610a24578891610a2f575b505060fb5416916040517f534ca7a20000000000000000000000000000000000000000000000000000000081528660048201528681806109058882018787612567565b0381875afa908115610a24578891610a07575b50610927575b86600160655580f35b6109429060405192610938846123cf565b3384523691612490565b8582015260036040820152813b15610a035785606081957f4f505f434f4e444954494f4e530000000000000000000000000000000000000060406109c2977f4f50455241544f525f434c4f5345445f504f434b45545f4455455f544f5f535482519b8c9a8b9963384e1a0960e21b8b528560048c015260448b019061297d565b92898403968701908a0152602d8352820152015201925af1801561033f576109ef575b808080808061091e565b6109f8906123bb565b6101565780386109e5565b8580fd5b610a1e9150873d89116103de576103d08183612407565b38610918565b6040513d8a823e3d90fd5b610a38906123bb565b610a435786386108c2565b8680fd5b8b80fd5b608488602d886040519262461bcd60e51b845260048401528201527f4f7065726174696f6e206572726f723a2062757920636f6e646974696f6e206460448201527f6f6573206e6f74207265616368000000000000000000000000000000000000006064820152fd5b610acb9150893d8b116103de576103d08183612407565b386107d9565b6040513d8c823e3d90fd5b9050610b0191985060403d604011610b0a575b610af98183612407565b81019061292a565b97909738610784565b503d610aef565b6040513d89823e3d90fd5b6084856038856040519262461bcd60e51b845260048401528201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f7420726561647920746f20706572666f726d207377617000000000000000006064820152fd5b610b9c9150863d88116103de576103d08183612407565b38610726565b610bb99150873d89116103de576103d08183612407565b386106ce565b5081813d8311610bec575b610bd48183612407565b81010312610be757856106b69151610692565b600080fd5b503d610bca565b50610479610c12610c03366122a9565b61045c6002606554141561282e565b90612c82565b5034610156576020806003193601126103f45760043567ffffffffffffffff92838211610156573660238301121561015657816004013593841161015657602480830194600595368383891b87010111610e7957610c7582612429565b94610c836040519687612407565b828652601f19610c9284612429565b0187865b828110610e6957505050845b838110610d085750505050506040519280840190808552835180925280604083818801981b870101940192955b828710610cdc5785850386f35b909192938280610cf8600193603f198a82030186528851612269565b9601920196019592919092610ccf565b610d22610d1b86838c1b85010185612441565b3691612490565b303b15610e00578680828b610dbf94519101305af43d15610df9573d610d4781612474565b90610d556040519283612407565b81523d898c83013e5b60405191610d6b836123cf565b602783527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c8c8401527f206661696c65640000000000000000000000000000000000000000000000000060408401526124f1565b610dc982896124c7565b52610dd481886124c7565b506000198114610de657600101610ca2565b8486634e487b7160e01b81526011600452fd5b6060610d5e565b6084896026886040519262461bcd60e51b845260048401528201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152fd5b606082828b010152018890610c96565b8380fd5b5034610156576020366003190112610156576001600160a01b03610e9f61223f565b610ea76122dc565b168073ffffffffffffffffffffffffffffffffffffffff1960fb54161760fb556040519081527f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8260203392a280f35b50346101565760031990602036830181136103f45760043567ffffffffffffffff81116103f057610f2b903690600401612211565b91610f3b6002606554141561282e565b60026065556001600160a01b038060fb5416956040517f819e8a3a000000000000000000000000000000000000000000000000000000008152838180610f86338a8a60048501612891565b03818b5afa908115610b11578791611209575b501561119f57859683604051809263b3fd1da560e01b82528260048301528180610fc7602482018c8c612567565b03915afa8015610b1157610fe2918891611182575b506128b9565b8160fc5416604080518092639c89bb3d60e01b8252866004830152818a8161100e602482018d8d612567565b03925af1918215610b11578791889361115f575b508360fb5416926040519261103684612389565b611041368a8a612490565b8452338785015260408401526060830152823b1561115b57849288928360406110a6947f555345525f434c4f5345445f504f534954494f4e0000000000000000000000008251988997889663b48093e160e01b88528560048901526044880190612940565b868103938401602488015260148152015201925af19081156103e5578691611147575b50506110e19060fb541692604051946102a6866123cf565b9083015260036040830152803b1561114357611117839291839260405194858094819363384e1a0960e21b8352600483016129ba565b03925af1801561033f5761112f575b50600160655580f35b611138906123bb565b610156578038611126565b5050fd5b611150906123bb565b61034a5784386110c9565b8780fd5b90925061117b915060403d604011610b0a57610af98183612407565b9138611022565b6111999150853d87116103de576103d08183612407565b38610fdc565b6084836040519062461bcd60e51b82526004820152603a60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f776e6572206973207060448201527f65726d697474656420666f7220746865206f7065726174696f6e0000000000006064820152fd5b6112209150843d86116103de576103d08183612407565b38610f99565b503461015657806003193601126101565760206001600160a01b0360975416604051908152f35b50346101565780600319360112610156576112666122dc565b60335460ff81166112a95760019060ff1916176033557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b606460405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152fd5b5034610156578060031936011261015657805460ff8160081c161590818092611464575b801561144d575b156113e35760ff19808216600117845561136391836113d2575b5060ff845460081c1690611345826131d2565b61134e826131d2565b6033541660335561135e816131d2565b6131d2565b61136c33612334565b81549061139560ff8360081c16611382816131d2565b61138b816131d2565b60016065556131d2565b61139d575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117845538611332565b608460405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156113185750600160ff821614611318565b50600160ff821610611311565b50346101565760031990602036830181136103f45760043567ffffffffffffffff81116103f0576114a6903690600401612211565b90936001600160a01b0360fb54166040517f9d92d7370000000000000000000000000000000000000000000000000000000081528481806114ec33888c60048501612891565b0381855afa9081156103e55786916115c4575b5015611574576115178596604051946102a6866123cf565b8484015260026040840152803b1561034a578492836040610584947f555345525f5041555345445f504f434b455400000000000000000000000000008251988997889663384e1a0960e21b8852856004890152604488019061297d565b6084846040519062461bcd60e51b825260048201526024808201527f4f7065726174696f6e206572726f723a2063616e6e6f7420706175736520706f60448201526318dad95d60e21b6064820152fd5b6115db9150853d87116103de576103d08183612407565b386114ff565b503461015657806003193601126101565760206001600160a01b0360fb5416604051908152f35b5060203660031901126101565760043567ffffffffffffffff81116103f457611638610479913690600401612211565b906116486002606554141561282e565b6002606555612c82565b503461015657806003193601126101565761166b6122dc565b60006001600160a01b0360975473ffffffffffffffffffffffffffffffffffffffff198116609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610156576020366003190112610156576004356001600160a01b0381168091036103f4576116e96122dc565b8073ffffffffffffffffffffffffffffffffffffffff1960fc54161760fc556040519081527f483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea3960203392a280f35b50346101565760209060031982813601126103f4576004359067ffffffffffffffff82116103f057816004016101808083853603011261034a576001600160a01b0360fb5416906117c28761178c8580612441565b60405193849283927fb612f866000000000000000000000000000000000000000000000000000000008452339160048501612891565b0381865afa908115610b11578791611961575b50156118f7578596823b15610a43578694859160405197889687957f3740c18300000000000000000000000000000000000000000000000000000000875260048701604090526118258280612535565b909160448901526101c488019061183b92612567565b9060248301356064880152604483013560848801526064830161185d91612588565b8783036043190160a489015261187392916125dd565b608482013560c48701529061188e60e4870160a48301612635565b6101446118a18782016101048401612658565b6118b19161018488019101612658565b848103928301602486015260128152017f555345525f5550444154455f504f434b455400000000000000000000000000009052604001925af1801561033f5761032f5750f35b6084876040519062461bcd60e51b82526004820152603160248201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f742061626c6520746f207570646174650000000000000000000000000000006064820152fd5b6119789150883d8a116103de576103d08183612407565b386117d5565b5034610156578060031936011261015657602060ff603354166040519015158152f35b50346101565780600319360112610156576119ba6122dc565b60335460ff8116156119fa5760ff19166033557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b606460405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b50346101565760403660031901126101565760043567ffffffffffffffff81116103f457611a73610479913690600401612211565b611a826002606554141561282e565b600260655560243591612f5f565b50346101565760031990602036830181136103f45760043567ffffffffffffffff81116103f057611ac5903690600401612211565b9093611ad66002606554141561282e565b60026065556001600160a01b038060fb54168460405180927f7bc039400000000000000000000000000000000000000000000000000000000082528180611b238c8a339160048501612891565b03915afa9081156103e5578691611cc5575b5015611c5b57611b4d8596604051946102a6866123eb565b848401528060fc5416803b15610a03578560405180927f61a45ae6000000000000000000000000000000000000000000000000000000008252876004830152818381611b9c602482018b6131ac565b03925af19081156103e5578691611c47575b505060fb5416803b1561034a578492836040611c1f947f555345525f57495448445245575f46554e440000000000000000000000000000825198899788967fbcf7a12200000000000000000000000000000000000000000000000000000000885285600489015260448801906131ac565b868103938401602488015260128152015201925af1801561033f5761112f5750600160655580f35b611c50906123bb565b61034a578438611bae565b6084846040519062461bcd60e51b82526004820152602c60248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420776974686472617760448201527f20706f636b65742066756e6400000000000000000000000000000000000000006064820152fd5b611cdc9150853d87116103de576103d08183612407565b38611b35565b50346101565760203660031901126101565760043567ffffffffffffffff81116103f457611d14903690600401612211565b611d266002606594939454141561282e565b60026065556001600160a01b0360fb541660405163983d273760e01b8152602081600481855afa90811561200d5784916121de575b50604051632474521560e21b81526004810191909152336024820152602081604481855afa90811561200d5790611d989185916121c55750612a2b565b6020604051809263b3fd1da560e01b82528260048301528180611dbf60248201888b612567565b03915afa9081156121a15790611ddb9184916121ac57506128b9565b6001600160a01b0360fc541692604080518095639c89bb3d60e01b825260206004830152818681611e10602482018989612567565b03925af19384156121a1578390849561217d575b506001600160a01b0360fb5416946040517fd3fc80d900000000000000000000000000000000000000000000000000000000815260208180611e6c85878a8a60048601612a9c565b03818a5afa9081156103e557869161215e575b506040517f1416642e00000000000000000000000000000000000000000000000000000000815260208180611eba86888b8b60048601612a9c565b03818b5afa908115610b1157879161213f575b50818215612138575b156120ce57612018575b859650611f48575b5050611f116001600160a01b0360fb54169160405193611f07856123cf565b3385523691612490565b602083015260036040830152803b1561114357611117839291839260405194858094819363384e1a0960e21b8352600483016129ba565b6001600160a01b0360fb54169060405192611f6284612389565b611f6d368787612490565b845233602085015260408401526060830152803b1561034a57611fb08591604093838551958694859363b48093e160e01b85528260048601526044850190612940565b7f4f50455241544f525f53544f505f4c4f535300000000000000000000000000006020858303926003198401602488015260128152015201925af190811561200d57849115611ee857612002906123bb565b611143578238611ee8565b6040513d86823e3d90fd5b60405161202481612389565b61202f368787612490565b8152336020820152836040820152826060820152873b15610a43576120746040988892838b519b8c94859363b48093e160e01b85528260048601526044850190612940565b7f4f50455241544f525f54414b455f50524f4649540000000000000000000000006020858303926003198401602488015260148152015201925af180156103e55715611ee0579490956120c6906123bb565b938590611ee0565b608460405162461bcd60e51b815260206004820152603a60248201527f4f7065726174696f6e206572726f723a20636c6f73696e6720706f736974696f60448201527f6e20636f6e646974696f6e20646f6573206e6f742072656163680000000000006064820152fd5b5080611ed6565b612158915060203d6020116103de576103d08183612407565b38611ecd565b612177915060203d6020116103de576103d08183612407565b38611e7f565b905061219991945060403d604011610b0a57610af98183612407565b939038611e24565b6040513d85823e3d90fd5b611199915060203d6020116103de576103d08183612407565b610bb9915060203d6020116103de576103d08183612407565b90506020813d602011612209575b816121f960209383612407565b81010312610e7957516020611d5b565b3d91506121ec565b9181601f84011215610be75782359167ffffffffffffffff8311610be75760208381860195010111610be757565b600435906001600160a01b0382168203610be757565b35906001600160a01b0382168203610be757565b919082519283825260005b848110612295575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612274565b60031990602081830112610be7576004359167ffffffffffffffff8311610be7578261020092030112610be75760040190565b6001600160a01b036097541633036122f057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b609754906001600160a01b03809116918273ffffffffffffffffffffffffffffffffffffffff19821617609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6080810190811067ffffffffffffffff8211176123a557604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116123a557604052565b6060810190811067ffffffffffffffff8211176123a557604052565b6040810190811067ffffffffffffffff8211176123a557604052565b90601f8019910116810190811067ffffffffffffffff8211176123a557604052565b67ffffffffffffffff81116123a55760051b60200190565b903590601e1981360301821215610be7570180359067ffffffffffffffff8211610be757602001918136038313610be757565b67ffffffffffffffff81116123a557601f01601f191660200190565b92919261249c82612474565b916124aa6040519384612407565b829481845281830111610be7578281602093846000960137010152565b80518210156124db5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b909190156124fd575090565b81511561250d5750805190602001fd5b6125319060405191829162461bcd60e51b8352602060048401526024830190612269565b0390fd5b9035601e1982360301811215610be757016020813591019167ffffffffffffffff8211610be7578136038313610be757565b908060209392818452848401376000828201840152601f01601f1916010190565b9035601e1982360301811215610be757016020813591019167ffffffffffffffff8211610be7578160061b36038313610be757565b600411156125c757565b634e487b7160e01b600052602160045260246000fd5b918181526020809101929160009182905b8282106125fd57505050505090565b909192939485358152818601356004811015610a035790816126206001936125bd565b818401526040908101960194939201906125ee565b60409080358352602081013560208401520135906007821015610be75760400152565b80356004811015610be7576020918161267184936125bd565b84520135910152565b602081019081356001600160a01b0390818116809103610be75733036127ea578060fb5416803b15610be7576127c2936000612782938195604051978896879586947fe92c3598000000000000000000000000000000000000000000000000000000008652602060048701528061271061270a6126f78880612535565b61020060248c01526102248b0191612567565b93612255565b1660448701528061272360408701612255565b1660648701528061273660608701612255565b16608487015261274860808601612255565b1660a486015260a084013560c486015260c084013560e486015261276f60e0850185612588565b86830360231901610104880152906125dd565b916101008101356101248501526127a161014485016101208301612635565b6127b36101a485016101808301612658565b6101c06101e485019101612658565b03925af180156127de576127d35750565b6127dc906123bb565b565b6040513d6000823e3d90fd5b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c696420706f636b65743a206f776e6572206d69736d6174636865736044820152fd5b1561283557565b606460405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b90816020910312610be757518015158103610be75790565b916128b26020926001600160a01b0392969596604086526040860191612567565b9416910152565b156128c057565b608460405162461bcd60e51b815260206004820152603a60248201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f7420726561647920746f20636c6f736520706f736974696f6e0000000000006064820152fd5b9190826040910312610be7576020825192015190565b906060806129578451608085526080850190612269565b936001600160a01b03602082015116602085015260408101516040850152015191015290565b906001600160a01b03825116815260406129a66020840151606060208501526060840190612269565b9201519060058210156125c7576040015290565b6129ce60609260408352604083019061297d565b906020818303910152602481527f434c4f5345445f504f434b45545f4455455f544f5f504f534954494f4e5f434c60208201527f4f5345440000000000000000000000000000000000000000000000000000000060408201520190565b15612a3257565b608460405162461bcd60e51b815260206004820152603d60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f70657261746f72206960448201527f73207065726d697474656420666f7220746865206f7065726174696f6e0000006064820152fd5b90612ab69060409396959496606084526060840191612567565b9460208201520152565b15612ac757565b606460405162461bcd60e51b815260206004820152601f60248201527f4f7065726174696f6e206572726f723a2063616e6e6f74206465706f736974006044820152fd5b51906001600160a01b0382168203610be757565b9190826040910312610be757604051612b37816123eb565b809280516004811015610be7578252602090810151910152565b9190828103906101c08212610be757612b6984612b0b565b93612b7660208201612b0b565b93612b8360408301612b0b565b9360608301519360808401519360a081015193606060c08301519460df190112610be757604051612bb3816123cf565b60e083015181526101008301516020820152610120830151906007821015610be757612bf791604082015293610180612bf0826101408701612b1f565b9401612b1f565b90565b9060606001600160a01b0380845116835281612c256020860151608060208701526080860190612269565b946040810151604086015201511691015290565b612c4b60409283835283830190612bfa565b906020818303910152601381527f555345525f4445504f53495445445f46554e440000000000000000000000000060208201520190565b6000913415612f1b576001600160a01b03918260fb541692604093845192624418eb60e81b8452602091600494838180612cc0338b888c8501612891565b0381855afa908115612eaa5790612cde918a91612efe575b50612ac0565b8651809163381635c960e21b825284878301526101c09283918180612d07602482018d8a612567565b03915afa918215612eaa57908592918a92612ec7575b50501690813b1561115b5786517fd0e30db00000000000000000000000000000000000000000000000000000000081528881878134875af18015612eaa57612eb4575b5060fc54875163095ea7b360e01b81529085166001600160a01b031686820190815234602082015284908290819060400103818c875af18015612eaa5790612dbf9291612e8d575b50875196612db588612389565b3388523691612490565b82860152348686015260608501528160fc541690813b15610a4357869086519283916322da9c3160e21b835286830152818381612dff602482018b612bfa565b03925af18015612e8357908691612e6f575b505060fb541690813b1561034a57918491849383612e4196518097819582946399ba805760e01b84528301612c39565b03925af1908115612e665750612e55575050565b612e5f82916123bb565b6101565750565b513d84823e3d90fd5b612e78906123bb565b61034a578438612e11565b85513d88823e3d90fd5b612ea390853d87116103de576103d08183612407565b5038612da8565b88513d8b823e3d90fd5b612ec0909891986123bb565b9638612d60565b612ee69250803d10612ef7575b612ede8183612407565b810190612b51565b505050505050505090503880612d1d565b503d612ed4565b612f159150853d87116103de576103d08183612407565b38612cd8565b606460405162461bcd60e51b815260206004820152601f60248201527f4f7065726174696f6e206572726f723a20696e76616c696420616d6f756e74006044820152fd5b9060fb54926000936001600160a01b03809116604094855193624418eb60e81b8552602092600495848180612f98338c898d8501612891565b0381855afa9081156131645790612fb5918b9161316e5750612ac0565b8751809163381635c960e21b825285888301526101c09283918180612fdf8d60248301908b612567565b03915afa91821561316457908692918b92613185575b5050169187517f23b872dd000000000000000000000000000000000000000000000000000000008152338782015230602482015282604482015284816064818d885af19081156131645790613050918b9161316e5750612ac0565b61308984838760fc54168b51938492839263095ea7b360e01b84528c8401602090939291936001600160a01b0360408201951681520152565b03818d885af1801561316457906130b79291613147575b508851976130ad89612389565b3389523691612490565b838701528686015260608501528160fc541690813b15610a4357869086519283916322da9c3160e21b8352868301528183816130f6602482018b612bfa565b03925af18015612e8357613134575b5060fb541690813b1561034a57918491849383612e4196518097819582946399ba805760e01b84528301612c39565b613140909591956123bb565b9338613105565b61315d90863d88116103de576103d08183612407565b50386130a0565b89513d8c823e3d90fd5b612f159150863d88116103de576103d08183612407565b61319b9250803d10612ef757612ede8183612407565b505050505050505090503880612ff5565b9060406020612bf7936001600160a01b0381511684520151918160208201520190612269565b156131d957565b608460405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fdfea2646970667358221220b2c9e86eec4381570acc652cce9dee5645c344978eee4f717088d62329fb6e5f64736f6c63430008130033";

type PocketChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PocketChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PocketChef__factory extends ContractFactory {
  constructor(...args: PocketChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PocketChef> {
    return super.deploy(overrides || {}) as Promise<PocketChef>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PocketChef {
    return super.attach(address) as PocketChef;
  }
  override connect(signer: Signer): PocketChef__factory {
    return super.connect(signer) as PocketChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PocketChefInterface {
    return new utils.Interface(_abi) as PocketChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PocketChef {
    return new Contract(address, _abi, signerOrProvider) as PocketChef;
  }
}
