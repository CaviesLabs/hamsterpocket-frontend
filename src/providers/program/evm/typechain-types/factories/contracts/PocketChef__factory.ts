/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PocketChef,
  PocketChefInterface,
} from "../../contracts/PocketChef";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "RegistryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "VaultUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "closePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createPocketAndDepositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "createPocketAndDepositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "pausePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract PocketRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "restartPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "tryClosingPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "tryMakingDCASwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.UpdatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "updatePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract PocketVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100c2576000549060ff8260081c16610070575060ff80821610610035575b60405161325a9081620000c88239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c80630d57fdd714611ea857806331fb67c214611c4457806333ad57e414611c185780633769e9d714611bf35780633f4ba83a14611b575780635c975abb14611b345780635e54c034146118ef5780636817031b14611874578063715018a61461180b57806377c76321146117c15780637b1039991461179a5780637fa97c261461162e5780638129fc1c146114a85780638456cb591461140a57806389beb41214610e825780638da5cb5b14610e5b57806395e9dcf714610e44578063a91ee0dc14610dcc578063ac9650d814610b6757828163bd69e085146105fd57508063c60910d01461058c578063cbfc305b146103fc578063e4a479b514610206578063f2fde38b1461015e5763fbfa77cf1461013457600080fd5b3461015a578160031936011261015a576020906001600160a01b0360fc54169051908152f35b5080fd5b503461015a57602036600319011261015a57610178612237565b906101816122a1565b6001600160a01b0382161561019d575061019a906122f9565b80f35b6084905162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b5090346103445760206003199281843601126103f85760043567ffffffffffffffff81116103f45761023c9036906004016121a3565b90946001600160a01b0360fb541683517f80b443c300000000000000000000000000000000000000000000000000000000815285818061028133888d6004850161286a565b0381855afa9081156103ea5787916103bd575b5015610354576102b586978551946102ab86612394565b3386523691612455565b85840152600184840152803b156103505785928385610310947f555345525f5245535441525445445f504f434b455400000000000000000000008251998a97889663384e1a0960e21b88528560048901526044880190612956565b868103938401602488015260158152015201925af190811561034757506103345750f35b61033d90612380565b6103445780f35b80fd5b513d84823e3d90fd5b8580fd5b60848585519062461bcd60e51b82526004820152602660248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420726573746172742060448201527f706f636b657400000000000000000000000000000000000000000000000000006064820152fd5b6103dd9150863d88116103e3575b6103d581836123cc565b810190612852565b38610294565b503d6103cb565b85513d89823e3d90fd5b8380fd5b8280fd5b5090346103445760206003199281843601126103f85760043567ffffffffffffffff81116103f4576104329036906004016121a3565b90946001600160a01b0360fb541683517fe6068d0100000000000000000000000000000000000000000000000000000000815285818061047733888d6004850161286a565b0381855afa9081156103ea57879161056f575b5015610520576104a186978551946102ab86612394565b85840152600384840152803b1561035057859283856104fc947f555345525f434c4f5345445f504f434b455400000000000000000000000000008251998a97889663384e1a0960e21b88528560048901526044880190612956565b868103938401602488015260128152015201925af190811561034757506103345750f35b60848585519062461bcd60e51b825260048201526024808201527f4f7065726174696f6e206572726f723a2063616e6e6f7420636c6f736520706f60448201526318dad95d60e21b6064820152fd5b6105869150863d88116103e3576103d581836123cc565b3861048a565b503461015a57600319903682011261015a576004359067ffffffffffffffff82116103f8576102209082600401923603011261015a576105ec6105f5916105d860026065541415612807565b60026065556105e68161263f565b80612406565b60243591612f3f565b600160655580f35b808334610b645761060d366121d1565b6106206002606595949395541415612807565b60026065556001600160a01b03908160fb5416845163983d273760e01b8152602081600481855afa908115610aa3578891610b27575b508551632474521560e21b81526004810191909152336024820152602081604481855afa908115610aa35790610693918991610b08575b50612a04565b60208551809263b3fd1da560e01b825282600483015281806106b9602482018c8b61252c565b03915afa9081156103ea578592916106d8918991610ae9575b50612892565b8260fc541682518099818094630d57fdd760e01b8252866004830152610702604483018c8b61252c565b90602483015203925af1958615610adf5785908697610aad575b508160fb54169684517fd3fc80d90000000000000000000000000000000000000000000000000000000081526020818061075c85878c8b60048601612a75565b03818c5afa908115610aa3578891610a84575b508551987f1416642e000000000000000000000000000000000000000000000000000000008a5260208a806107aa86888d8c60048601612a75565b0381845afa998a156109e557899a610a63575b50818215610a5c575b156109f3578899610924575b50610857575b50506107ef9060fb5416918351946102ab86612394565b6020840152600382840152803b15610852576108248493918492845195868094819363384e1a0960e21b835260048301612993565b03925af1908115610347575061083e575b50600160655580f35b61084790612380565b610344578082610835565b505050fd5b8260fb5416908551926108698461234e565b610874368988612455565b8452336020850152868401526060830152803b15610920576108b587918693838551958694859363b48093e160e01b85528260048601526044850190612919565b7f4f50455241544f525f53544f505f4c4f535300000000000000000000000000006020858303926003198401602488015260128152015201925af1801561091657908691156107d85761090790612380565b6109125784876107d8565b8480fd5b84513d88823e3d90fd5b8680fd5b8651906109308261234e565b61093b368a89612455565b82523360208301528488830152836060830152803b156109ef5761097e8a918993838551958694859363b48093e160e01b85528260048601526044850190612919565b7f4f50455241544f525f54414b455f50524f4649540000000000000000000000006020858303926003198401602488015260148152015201925af180156109e5579089916109cd575b506107d2565b6109d690612380565b6109e157878a6109c7565b8780fd5b87513d8b823e3d90fd5b8980fd5b6084875162461bcd60e51b815260206004820152603a60248201527f4f7065726174696f6e206572726f723a20636c6f73696e6720706f736974696f60448201527f6e20636f6e646974696f6e20646f6573206e6f742072656163680000000000006064820152fd5b50896107c6565b610a7d919a5060203d6020116103e3576103d581836123cc565b988a6107bd565b610a9d915060203d6020116103e3576103d581836123cc565b8961076f565b86513d8a823e3d90fd5b9050610ad0919650833d8511610ad8575b610ac881836123cc565b810190612903565b95908761071c565b503d610abe565b83513d87823e3d90fd5b610b02915060203d6020116103e3576103d581836123cc565b8a6106d2565b610b21915060203d6020116103e3576103d581836123cc565b8a61068d565b9750506020873d602011610b5c575b81610b43602093836123cc565b81010312610b575795518796906020610656565b600080fd5b3d9150610b36565b50fd5b509034610344576020918260031936011261015a576004359067ffffffffffffffff938483116103f457366023840112156103f45782600401359485116103f4576024808401956005963683838a1b8801011161092057610bcb82979594976123ee565b95610bd8855197886123cc565b828752601f19610be7846123ee565b01865b818110610dbd575050855b838110610c585750505050508051938080860192818752855180945283818801981b870101940192955b828710610c2c5785850386f35b909192938280610c48600193603f198a82030186528851612261565b9601920196019592919092610c1f565b610c76610c6f86838d9c999a9c1b85010185612406565b3691612455565b303b15610d555789808289610d1094519101305af43d15610d4e573d610c9b81612439565b90610ca88b5192836123cc565b81523d8c8a83013e5b895191610cbd83612394565b602783527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c8a8401527f206661696c6564000000000000000000000000000000000000000000000000008b8401526124b6565b610d1a828a61248c565b52610d25818961248c565b506000198114610d3b5760010197959497610bf5565b8489634e487b7160e01b81526011600452fd5b6060610cb1565b6084876026888b519262461bcd60e51b845260048401528201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152fd5b60608982018b01528901610bea565b503461015a57602036600319011261015a576001600160a01b03610dee612237565b610df66122a1565b16908173ffffffffffffffffffffffffffffffffffffffff1960fb54161760fb55519081527f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8260203392a280f35b82346103445761019a610e5636612204565b61263f565b503461015a578160031936011261015a576020906001600160a01b03609754169051908152f35b50903461034457610e92366121d1565b939091610ea460026065541415612807565b60026065556001600160a01b038060fb54169183519463983d273760e01b86526020958681600481885afa8015610aa357879089906113db575b8751632474521560e21b8152600481019190915233602482015291508180604481015b0381885afa908115610aa35790610f1e9189916113be5750612a04565b84517fc11bc90f00000000000000000000000000000000000000000000000000000000815286600482015286816024968180610f5d8a8201888a61252c565b03915afa908115610aa35788916113a1575b5015611339578487988460fc54168251809b8180947fbe6590a6000000000000000000000000000000000000000000000000000000008252866004830152610fbb60448301898b61252c565b908b83015203925af19283156103ea5787988894611314575b5060fb5486517f125167ef00000000000000000000000000000000000000000000000000000000815290821690888180611014898f898b60048601612a75565b0381855afa90811561130a578a916112ed575b501561128557889987519561103b8761234e565b338752611049368688612455565b928a880193845289880192835260608801918252803b156112815788978c8b81958e89968351998a9889977f368e0b6c0000000000000000000000000000000000000000000000000000000089528660048a01525116604488015251606487016080905260c487016110ba91612261565b925160848701525160a4860152848203916003199e8f840190870152601e8152017f4f50455241544f525f555044415445445f54524144494e475f53544154530000905201925af180156109e55790899161126d575b505060fb54169185517f534ca7a2000000000000000000000000000000000000000000000000000000008152876004820152878180611152888201878761252c565b0381875afa9081156109e5578991611250575b50611174575b87600160655580f35b61118e9086519261118484612394565b3384523691612455565b86820152600385820152813b156109205786606081957f4f505f434f4e444954494f4e53000000000000000000000000000000000000008861120c977f4f50455241544f525f434c4f5345445f504f434b45545f4455455f544f5f535482519c8d9a8b9963384e1a0960e21b8b528560048c015260448b0190612956565b92898403968701908a0152602d8352820152015201925af1908115610347575061123c575b80808080808061116b565b61124590612380565b610344578038611231565b6112679150883d8a116103e3576103d581836123cc565b38611165565b61127690612380565b6109e1578738611110565b8b80fd5b608488602d888a519262461bcd60e51b845260048401528201527f4f7065726174696f6e206572726f723a2062757920636f6e646974696f6e206460448201527f6f6573206e6f74207265616368000000000000000000000000000000000000006064820152fd5b6113049150893d8b116103e3576103d581836123cc565b38611027565b88513d8c823e3d90fd5b90935061132f919850853d8711610ad857610ac881836123cc565b9790979238610fd4565b60848660388688519262461bcd60e51b845260048401528201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f7420726561647920746f20706572666f726d207377617000000000000000006064820152fd5b6113b89150873d89116103e3576103d581836123cc565b38610f6f565b6113d59150883d8a116103e3576103d581836123cc565b3861068d565b5081813d8311611403575b6113f081836123cc565b81010312610b575786610f019151610ede565b503d6113e6565b503461015a578160031936011261015a576114236122a1565b60335460ff81166114655760ff1916600117603355513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b6064825162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152fd5b503461015a578160031936011261015a57815460ff8160081c161590818092611621575b801561160a575b156115a15760ff19808216600117855561151e9183611590575b5060ff855460081c1690611500826131b3565b611509826131b3565b60335416603355611519816131b3565b6131b3565b611527336122f9565b82549061155060ff8360081c1661153d816131b3565b611546816131b3565b60016065556131b3565b611558578280f35b61ff001916825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b61ffff1916610101178555386114ed565b6084835162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156114d35750600160ff8216146114d3565b50600160ff8216106114cc565b5090346103445760206003199281843601126103f85760043567ffffffffffffffff81116103f4576116649036906004016121a3565b90946001600160a01b0360fb541683517f9d92d7370000000000000000000000000000000000000000000000000000000081528581806116a933888d6004850161286a565b0381855afa9081156103ea57879161177d575b501561172e576116d386978551946102ab86612394565b85840152600284840152803b1561035057859283856104fc947f555345525f5041555345445f504f434b455400000000000000000000000000008251998a97889663384e1a0960e21b88528560048901526044880190612956565b60848585519062461bcd60e51b825260048201526024808201527f4f7065726174696f6e206572726f723a2063616e6e6f7420706175736520706f60448201526318dad95d60e21b6064820152fd5b6117949150863d88116103e3576103d581836123cc565b386116bc565b503461015a578160031936011261015a576020906001600160a01b0360fb54169051908152f35b8260203660031901126103445760043567ffffffffffffffff811161015a576117f16105f59136906004016121a3565b9061180160026065541415612807565b6002606555612c6a565b82346103445780600319360112610344576118246122a1565b60006001600160a01b0360975473ffffffffffffffffffffffffffffffffffffffff198116609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461015a57602036600319011261015a57600435906001600160a01b0382168092036103f8576118a36122a1565b8173ffffffffffffffffffffffffffffffffffffffff1960fc54161760fc55519081527f483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea3960203392a280f35b5090346103445760206003199281843601126103f8576004359167ffffffffffffffff83116103f4578260040161018080878636030112610350576001600160a01b0360fb54169061197a846119458580612406565b885193849283927fb612f86600000000000000000000000000000000000000000000000000000000845233916004850161286a565b0381865afa908115610aa3578891611b17575b5015611aae578697823b156109e1578588959186928251998a9788967f3740c1830000000000000000000000000000000000000000000000000000000088528560048901526119dc82806124fa565b909160448a01526101c48901906119f29261252c565b90602483013560648901526044830135608489015260648301611a149161254d565b8883036043190160a48a0152611a2a92916125a2565b608482013560c488015290611a4560e4880160a483016125fa565b610144611a58888201610104840161261d565b611a68916101848901910161261d565b858103928301602487015260128152017f555345525f5550444154455f504f434b45540000000000000000000000000000905201925af190811561034757506103345750f35b60848486519062461bcd60e51b82526004820152603160248201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f742061626c6520746f207570646174650000000000000000000000000000006064820152fd5b611b2e9150853d87116103e3576103d581836123cc565b3861198d565b503461015a578160031936011261015a5760209060ff6033541690519015158152f35b503461015a578160031936011261015a57611b706122a1565b60335460ff811615611bb05760ff1916603355513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b6064825162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b826105f5611c12611c0336612204565b6105d860026065541415612807565b90612c6a565b8234610344576105f5611c2a366121d1565b91611c3a60026065541415612807565b6002606555612f3f565b5090346103445760206003199281843601126103f85760043567ffffffffffffffff81116103f457611c7a9036906004016121a3565b9094611c8b60026065541415612807565b60026065556001600160a01b038060fb541685855180927f7bc039400000000000000000000000000000000000000000000000000000000082528180611cd78d8a33916004850161286a565b03915afa9081156103ea578791611e8b575b5015611e2257611d0086978551946102ab866123b0565b858401528060fc5416803b156109205786855180927f61a45ae6000000000000000000000000000000000000000000000000000000008252886004830152818381611d4e602482018b61318d565b03925af180156103ea57908791611e0e575b505060fb5416803b156103505785928385611dd0947f555345525f57495448445245575f46554e4400000000000000000000000000008251998a9788967fbcf7a122000000000000000000000000000000000000000000000000000000008852856004890152604488019061318d565b868103938401602488015260128152015201925af19081156103475750611dfa5750600160655580f35b611e0390612380565b610344578038610835565b611e1790612380565b610350578538611d60565b60848585519062461bcd60e51b82526004820152602c60248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420776974686472617760448201527f20706f636b65742066756e6400000000000000000000000000000000000000006064820152fd5b611ea29150863d88116103e3576103d581836123cc565b38611ce9565b50903461034457611eb8366121d1565b939091611eca60026065541415612807565b60026065556001600160a01b03948560fb5416908351917f819e8a3a000000000000000000000000000000000000000000000000000000008352602092838180611f19338b8a6004850161286a565b0381855afa908115610aa3578891612186575b501561211d57828551809263b3fd1da560e01b82528260048301528180611f57602482018c8b61252c565b03915afa9081156103ea5791611f768692899485916121005750612892565b8860fc541682518094818094630d57fdd760e01b8252866004830152611fa0604483018d8c61252c565b90602483015203925af190811561091657869087926120e0575b508760fb541691855191611fcd8361234e565b611fd8368988612455565b83523385840152868301526060820152813b156109205761201885928892838551958694859363b48093e160e01b85528260048601526044850190612919565b7f555345525f434c4f5345445f504f534954494f4e00000000000000000000000089858303926003198401602488015260148152015201925af18015610916576120cb575b5061207e859660fb54169284519561207487612394565b3387523691612455565b90840152600382840152803b15610852576120b28493918492845195868094819363384e1a0960e21b835260048301612993565b03925af19081156103475750611dfa5750600160655580f35b946120d961207e9796612380565b949561205d565b90506120f99150843d8611610ad857610ac881836123cc565b9038611fba565b6121179150863d88116103e3576103d581836123cc565b386106d2565b60848386519062461bcd60e51b82526004820152603a60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f776e6572206973207060448201527f65726d697474656420666f7220746865206f7065726174696f6e0000000000006064820152fd5b61219d9150843d86116103e3576103d581836123cc565b38611f2c565b9181601f84011215610b575782359167ffffffffffffffff8311610b575760208381860195010111610b5757565b6040600319820112610b57576004359067ffffffffffffffff8211610b57576121fc916004016121a3565b909160243590565b60031990602081830112610b57576004359167ffffffffffffffff8311610b57578261022092030112610b575760040190565b600435906001600160a01b0382168203610b5757565b35906001600160a01b0382168203610b5757565b919082519283825260005b84811061228d575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161226c565b6001600160a01b036097541633036122b557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b609754906001600160a01b03809116918273ffffffffffffffffffffffffffffffffffffffff19821617609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6080810190811067ffffffffffffffff82111761236a57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161236a57604052565b6060810190811067ffffffffffffffff82111761236a57604052565b6040810190811067ffffffffffffffff82111761236a57604052565b90601f8019910116810190811067ffffffffffffffff82111761236a57604052565b67ffffffffffffffff811161236a5760051b60200190565b903590601e1981360301821215610b57570180359067ffffffffffffffff8211610b5757602001918136038313610b5757565b67ffffffffffffffff811161236a57601f01601f191660200190565b92919261246182612439565b9161246f60405193846123cc565b829481845281830111610b57578281602093846000960137010152565b80518210156124a05760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b909190156124c2575090565b8151156124d25750805190602001fd5b6124f69060405191829162461bcd60e51b8352602060048401526024830190612261565b0390fd5b9035601e1982360301811215610b5757016020813591019167ffffffffffffffff8211610b57578136038313610b5757565b908060209392818452848401376000828201840152601f01601f1916010190565b9035601e1982360301811215610b5757016020813591019167ffffffffffffffff8211610b57578160061b36038313610b5757565b6004111561258c57565b634e487b7160e01b600052602160045260246000fd5b918181526020809101929160009182905b8282106125c257505050505090565b9091929394853581528186013560048110156103505790816125e5600193612582565b818401526040908101960194939201906125b3565b60409080358352602081013560208401520135906007821015610b575760400152565b80356004811015610b5757602091816126368493612582565b84520135910152565b602081018035916001600160a01b0392838116809103610b575733036127c3578260fb5416803b15610b5757604051937fe3ba99a900000000000000000000000000000000000000000000000000000000855260206004860152806126c36126bd6126aa86806124fa565b61022060248b01526102448a019161252c565b9561224d565b166044860152806126d66040850161224d565b166064860152806126e96060850161224d565b1660848601526126fb6080840161224d565b1660a485015260a0820135916002831015610b575760008580949261279b61275b8498849660c486015260c084013560e486015260e084013561010486015261274861010085018561254d565b86830360231901610124880152906125a2565b9161012081013561014485015261277a610164850161014083016125fa565b61278c6101c485016101a0830161261d565b6101e06102048501910161261d565b03925af180156127b7576127ac5750565b6127b590612380565b565b6040513d6000823e3d90fd5b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c696420706f636b65743a206f776e6572206d69736d6174636865736044820152fd5b1561280e57565b606460405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b90816020910312610b5757518015158103610b575790565b9161288b6020926001600160a01b039296959660408652604086019161252c565b9416910152565b1561289957565b608460405162461bcd60e51b815260206004820152603a60248201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f7420726561647920746f20636c6f736520706f736974696f6e0000000000006064820152fd5b9190826040910312610b57576020825192015190565b906060806129308451608085526080850190612261565b936001600160a01b03602082015116602085015260408101516040850152015191015290565b906001600160a01b038251168152604061297f6020840151606060208501526060840190612261565b92015190600582101561258c576040015290565b6129a7606092604083526040830190612956565b906020818303910152602481527f434c4f5345445f504f434b45545f4455455f544f5f504f534954494f4e5f434c60208201527f4f5345440000000000000000000000000000000000000000000000000000000060408201520190565b15612a0b57565b608460405162461bcd60e51b815260206004820152603d60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f70657261746f72206960448201527f73207065726d697474656420666f7220746865206f7065726174696f6e0000006064820152fd5b90612a8f906040939695949660608452606084019161252c565b9460208201520152565b15612aa057565b606460405162461bcd60e51b815260206004820152601f60248201527f4f7065726174696f6e206572726f723a2063616e6e6f74206465706f736974006044820152fd5b51906001600160a01b0382168203610b5757565b9190826040910312610b5757604051612b10816123b0565b809280516004811015610b57578252602090810151910152565b90918183036101e08112610b5757612b4183612ae4565b93612b4e60208501612ae4565b93612b5b60408201612ae4565b9360608201516002811015610b57579360808301519360a08401519360c081015193606060e08301519460ff190112610b5757604051612b9a81612394565b61010083015181526101208301516020820152610140830151906007821015610b5757612bdf916040820152936101a0612bd8826101608701612af8565b9401612af8565b90565b9060606001600160a01b0380845116835281612c0d6020860151608060208701526080860190612261565b946040810151604086015201511691015290565b612c3360409283835283830190612be2565b906020818303910152601381527f555345525f4445504f53495445445f46554e440000000000000000000000000060208201520190565b6000913415612efb576001600160a01b03918260fb541692604093845192624418eb60e81b8452602091600494838180612ca8338b888c850161286a565b0381855afa908115612e895790612cc6918a91612ede575b50612a99565b8651809163381635c960e21b825284878301526101e09283918180612cef602482018d8a61252c565b03915afa918215612e8957908592918a92612ea6575b50501690813b156109e15786517fd0e30db00000000000000000000000000000000000000000000000000000000081528881878134875af18015612e8957612e93575b5060fc54875163095ea7b360e01b81529085166001600160a01b031686820190815234602082015284908290819060400103818c875af18015612e895790612da79291612e6c575b50875196612d9d8861234e565b3388523691612455565b82860152348686015260608501528160fc541690813b1561092057869086519283916322da9c3160e21b835286830152818381612de7602482018b612be2565b03925af18015612e6257908691612e4e575b505060fb541690813b1561091257918491849383612e2996518097819582946399ba805760e01b84528301612c21565b03925af19081156103475750612e3d575050565b612e478291612380565b6103445750565b612e5790612380565b610912578438612df9565b85513d88823e3d90fd5b612e8290853d87116103e3576103d581836123cc565b5038612d90565b88513d8b823e3d90fd5b612e9f90989198612380565b9638612d48565b612ec59250803d10612ed7575b612ebd81836123cc565b810190612b2a565b50505050505050505090503880612d05565b503d612eb3565b612ef59150853d87116103e3576103d581836123cc565b38612cc0565b606460405162461bcd60e51b815260206004820152601f60248201527f4f7065726174696f6e206572726f723a20696e76616c696420616d6f756e74006044820152fd5b9060fb54926000936001600160a01b03809116604094855193624418eb60e81b8552602092600495848180612f78338c898d850161286a565b0381855afa9081156131445790612f95918b9161314e5750612a99565b8751809163381635c960e21b825285888301526101e09283918180612fbf8d60248301908b61252c565b03915afa91821561314457908692918b92613165575b5050169187517f23b872dd000000000000000000000000000000000000000000000000000000008152338782015230602482015282604482015284816064818d885af19081156131445790613030918b9161314e5750612a99565b61306984838760fc54168b51938492839263095ea7b360e01b84528c8401602090939291936001600160a01b0360408201951681520152565b03818d885af1801561314457906130979291613127575b5088519761308d8961234e565b3389523691612455565b838701528686015260608501528160fc541690813b1561092057869086519283916322da9c3160e21b8352868301528183816130d6602482018b612be2565b03925af18015612e6257613114575b5060fb541690813b1561091257918491849383612e2996518097819582946399ba805760e01b84528301612c21565b61312090959195612380565b93386130e5565b61313d90863d88116103e3576103d581836123cc565b5038613080565b89513d8c823e3d90fd5b612ef59150863d88116103e3576103d581836123cc565b61317b9250803d10612ed757612ebd81836123cc565b50505050505050505090503880612fd5565b9060406020612bdf936001600160a01b0381511684520151918160208201520190612261565b156131ba57565b608460405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fdfea2646970667358221220f580d9818424fcab7753de0f17320eada26a718d4c6fd0a1af02de9bba1ac6a264736f6c63430008130033";

type PocketChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PocketChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PocketChef__factory extends ContractFactory {
  constructor(...args: PocketChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PocketChef> {
    return super.deploy(overrides || {}) as Promise<PocketChef>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PocketChef {
    return super.attach(address) as PocketChef;
  }
  override connect(signer: Signer): PocketChef__factory {
    return super.connect(signer) as PocketChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PocketChefInterface {
    return new utils.Interface(_abi) as PocketChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PocketChef {
    return new Contract(address, _abi, signerOrProvider) as PocketChef;
  }
}
