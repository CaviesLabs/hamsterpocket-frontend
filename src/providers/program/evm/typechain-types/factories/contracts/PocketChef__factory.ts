/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PocketChef,
  PocketChefInterface,
} from "../../contracts/PocketChef";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "RegistryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "VaultUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "closePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createPocketAndDepositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "createPocketAndDepositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "pausePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract PocketRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "restartPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "tryClosingPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "tryMakingDCASwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.UpdatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "updatePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract PocketVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234620000c6576000549060ff8260081c1662000074575060ff8082160362000038575b604051613e319081620000cc8239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000028565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c806331fb67c21461261f57806333ad57e4146125c657806335d4b6f214611fd85780633769e9d714611fba5780633f4ba83a14611ec85780635c975abb14611e875780635e54c03414611bd55780636817031b14611b24578063715018a614611a8557806377c7632114611a295780637b103999146119d75780637fa97c26146117f45780638129fc1c146115de5780638456cb59146114ea5780638da5cb5b1461149857806395e9dcf714611481578063a91ee0dc146113d3578063ac9650d814611148578063b678a87214610d9a578063c60910d014610d17578063cbfc305b14610b10578063e29e28d3146104c8578063e4a479b514610274578063f2fde38b146101875763fbfa77cf1461013257600080fd5b3461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835760209073ffffffffffffffffffffffffffffffffffffffff60fc54169051908152f35b5080fd5b50346101835760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610183576101bf612984565b906101c8612a26565b73ffffffffffffffffffffffffffffffffffffffff8216156101f157506101ee90612aa5565b80f35b608490517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c45760043567ffffffffffffffff81116104c0576102c89036906004016128b0565b909473ffffffffffffffffffffffffffffffffffffffff60fb541683517f80b443c300000000000000000000000000000000000000000000000000000000815285818061031a33888d60048501613223565b0381855afa9081156104b6578791610489575b50156104065761034e869785519461034486612b8d565b3386523691612c8d565b85840152600184840152803b1561040257859283856103c2947f555345525f5245535441525445445f504f434b455400000000000000000000008251998a9788967fe13868240000000000000000000000000000000000000000000000000000000088528560048901526044880190613367565b868103938401602488015260158152015201925af19081156103f957506103e65750f35b6103ef90612b5d565b6103f65780f35b80fd5b513d84823e3d90fd5b8580fd5b6084858551907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602660248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420726573746172742060448201527f706f636b657400000000000000000000000000000000000000000000000000006064820152fd5b6104a99150863d88116104af575b6104a18183612ba9565b81019061320b565b3861032d565b503d610497565b85513d89823e3d90fd5b8380fd5b8280fd5b5090346103f6576104d8366128de565b949190926104e461319c565b73ffffffffffffffffffffffffffffffffffffffff908160fb5416928451957f983d27370000000000000000000000000000000000000000000000000000000087526020968781600481895afa801561091c5788908a90610adc575b88517f91d14854000000000000000000000000000000000000000000000000000000008152600481019190915233602482015291508180604481015b0381895afa90811561091c579061059a918a91610abf575b50613422565b85517fc11bc90f000000000000000000000000000000000000000000000000000000008152876004820152878160249781806105d98b8201898b612e27565b03915afa90811561091c578991610aa2575b5015610a20576106349886918560fc5416908a8451809d819582947f5b349746000000000000000000000000000000000000000000000000000000008452898b600486016132f9565b03925af19283156104b657879888946109eb575b5060fb5486517f125167ef00000000000000000000000000000000000000000000000000000000815290821690888180610688898f898b600486016132f9565b0381855afa9081156109e1578a916109c4575b50156109425788998751956106af87612b71565b3387526106bd368688612c8d565b928a880193845289880192835260608801918252803b1561093e5788978c8b81958e89968351998a9889977f368e0b6c0000000000000000000000000000000000000000000000000000000089528660048a01525116604488015251606487016080905260c4870161072e916129c8565b925160848701525160a4860152848203917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9e8f840190870152601e8152017f4f50455241544f525f555044415445445f54524144494e475f53544154530000905201925af1801561091c57908991610926575b505060fb54169185517f534ca7a20000000000000000000000000000000000000000000000000000000081528760048201528781806107e48882018787612e27565b0381875afa90811561091c5789916108ff575b50610806575b87600160655580f35b6108209086519261081684612b8d565b3384523691612c8d565b86820152600385820152813b156108fb5786606081957f4f505f434f4e444954494f4e5300000000000000000000000000000000000000886108b7977f4f50455241544f525f434c4f5345445f504f434b45545f4455455f544f5f535482519c8d9a8b997fe1386824000000000000000000000000000000000000000000000000000000008b528560048c015260448b0190613367565b92898403968701908a0152602d8352820152015201925af19081156103f957506108e7575b8080808080806107fd565b6108f090612b5d565b6103f65780386108dc565b8680fd5b6109169150883d8a116104af576104a18183612ba9565b386107f7565b87513d8b823e3d90fd5b61092f90612b5d565b61093a5787386107a2565b8780fd5b8b80fd5b608488602d888a51927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f4f7065726174696f6e206572726f723a2062757920636f6e646974696f6e206460448201527f6f6573206e6f74207265616368000000000000000000000000000000000000006064820152fd5b6109db9150893d8b116104af576104a18183612ba9565b3861069b565b88513d8c823e3d90fd5b909350610a0f919850853d8711610a19575b610a078183612ba9565b8101906132e3565b9790979238610648565b503d6109fd565b6084876038878951927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f7420726561647920746f20706572666f726d207377617000000000000000006064820152fd5b610ab99150883d8a116104af576104a18183612ba9565b386105eb565b610ad69150893d8b116104af576104a18183612ba9565b38610594565b5081813d8311610b09575b610af18183612ba9565b81010312610b04578761057c9151610540565b600080fd5b503d610ae7565b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c45760043567ffffffffffffffff81116104c057610b649036906004016128b0565b909473ffffffffffffffffffffffffffffffffffffffff60fb541683517fe6068d01000000000000000000000000000000000000000000000000000000008152858180610bb633888d60048501613223565b0381855afa9081156104b6578791610cfa575b5015610c7857610be0869785519461034486612b8d565b85840152600384840152803b156104025785928385610c54947f555345525f434c4f5345445f504f434b455400000000000000000000000000008251998a9788967fe13868240000000000000000000000000000000000000000000000000000000088528560048901526044880190613367565b868103938401602488015260128152015201925af19081156103f957506103e65750f35b6084858551907f08c379a000000000000000000000000000000000000000000000000000000000825260048201526024808201527f4f7065726174696f6e206572726f723a2063616e6e6f7420636c6f736520706f60448201527f636b6574000000000000000000000000000000000000000000000000000000006064820152fd5b610d119150863d88116104af576104a18183612ba9565b38610bc9565b5034610183577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9081360112610183576004359067ffffffffffffffff82116104c4576102209082600401923603011261018357610d89610d9291610d7a61319c565b610d8381612f8f565b80612c02565b60243591613a57565b600160655580f35b5090346103f657610daa366128de565b94919290610db661319c565b73ffffffffffffffffffffffffffffffffffffffff8060fb5416968451927f819e8a3a000000000000000000000000000000000000000000000000000000008452602093848180610e0c338c8b60048501613223565b03818d5afa90811561091c57899161112b575b50156110a857879884875180927fb3fd1da50000000000000000000000000000000000000000000000000000000082528260048301528180610e668d60248301908d612e27565b03915afa90811561091c5791610e89610ec7949289948c9161108b575b50613258565b8460fc5416908a8a8551968795869485937fb678a8720000000000000000000000000000000000000000000000000000000085528d600486016132f9565b03925af180156104b6578791889161106c575b508260fb541690865192610eed84612b71565b610ef8368a89612c8d565b84523386850152878401526060830152803b1561093a57610f518891879383855195869485937fb48093e1000000000000000000000000000000000000000000000000000000008552826004860152604485019061331d565b7f555345525f434c4f5345445f504f534954494f4e0000000000000000000000008a858303927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8401602488015260148152015201925af180156104b657908791611058575b5050610fd89060fb541692845195610fce87612b8d565b3387523691612c8d565b90840152600382840152803b1561105357611025849391849284519586809481937fe1386824000000000000000000000000000000000000000000000000000000008352600483016133b1565b03925af19081156103f9575061103f575b50600160655580f35b61104890612b5d565b6103f6578038611036565b505050fd5b61106190612b5d565b610402578538610fb7565b90506110859150853d8711610a1957610a078183612ba9565b38610eda565b6110a29150883d8a116104af576104a18183612ba9565b38610e83565b6084848751907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152603a60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f776e6572206973207060448201527f65726d697474656420666f7220746865206f7065726174696f6e0000000000006064820152fd5b6111429150853d87116104af576104a18183612ba9565b38610e1f565b5090346103f657602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610183576004359067ffffffffffffffff938483116104c057366023840112156104c05782600401359485116104c0576024808401956005963683838a1b880101116108fb576111ca8297959497612bea565b956111d785519788612ba9565b8287527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061120484612bea565b01865b8181106113c4575050855b89848210611295575050505050508051938080860192818752855180945283818801981b870101940192955b82871061124b5785850386f35b909192938280611285837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08a6001960301865288516129c8565b960192019601959291909261123e565b6112b66112af8784611347949d9a9b9d1b86010186612c02565b3691612c8d565b8a808a51926112c484612b8d565b602784527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c8b8501527f206661696c6564000000000000000000000000000000000000000000000000008c8501528a81519101305af43d156113bc573d9061132b82612c53565b916113388c519384612ba9565b82523d8d8b84013e5b30612d07565b611351828a612cc4565b5261135c8189612cc4565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113905760010197959497611212565b84897f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b606090611341565b60608982018b01528901611207565b50346101835760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835773ffffffffffffffffffffffffffffffffffffffff611420612984565b611428612a26565b1690817fffffffffffffffffffffffff000000000000000000000000000000000000000060fb54161760fb55519081527f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8260203392a280f35b82346103f6576101ee61149336612933565b612f8f565b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835760209073ffffffffffffffffffffffffffffffffffffffff609754169051908152f35b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018357611521612a26565b60335460ff8116611581577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589160017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00602093161760335551338152a180f35b606482517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152fd5b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018357815460ff8160081c1615908180926117e7575b80156117d0575b1561174d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008082166001178555611690918361171f575b5060ff855460081c169061167282613d70565b61167b82613d70565b6033541660335561168b81613d70565b613d70565b61169933612aa5565b8254906116c260ff8360081c166116af81613d70565b6116b881613d70565b6001606555613d70565b6116ca578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6020921684555160018152a138808280f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011785553861165f565b608483517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156116275750600160ff821614611627565b50600160ff821610611620565b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c45760043567ffffffffffffffff81116104c0576118489036906004016128b0565b909473ffffffffffffffffffffffffffffffffffffffff60fb541683517f9d92d73700000000000000000000000000000000000000000000000000000000815285818061189a33888d60048501613223565b0381855afa9081156104b65787916119ba575b5015611938576118c4869785519461034486612b8d565b85840152600284840152803b156104025785928385610c54947f555345525f5041555345445f504f434b455400000000000000000000000000008251998a9788967fe13868240000000000000000000000000000000000000000000000000000000088528560048901526044880190613367565b6084858551907f08c379a000000000000000000000000000000000000000000000000000000000825260048201526024808201527f4f7065726174696f6e206572726f723a2063616e6e6f7420706175736520706f60448201527f636b6574000000000000000000000000000000000000000000000000000000006064820152fd5b6119d19150863d88116104af576104a18183612ba9565b386118ad565b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835760209073ffffffffffffffffffffffffffffffffffffffff60fb54169051908152f35b8260207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f65760043567ffffffffffffffff811161018357611a77610d929136906004016128b0565b90611a8061319c565b6136d0565b82346103f657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f657611abc612a26565b600073ffffffffffffffffffffffffffffffffffffffff6097547fffffffffffffffffffffffff00000000000000000000000000000000000000008116609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101835760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610183576004359073ffffffffffffffffffffffffffffffffffffffff82168092036104c457611b7e612a26565b817fffffffffffffffffffffffff000000000000000000000000000000000000000060fc54161760fc55519081527f483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea3960203392a280f35b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c4576004359167ffffffffffffffff83116104c05782600401610180808786360301126104025773ffffffffffffffffffffffffffffffffffffffff60fb541690611c8b84611c568580612c02565b885193849283927fb612f866000000000000000000000000000000000000000000000000000000008452339160048501613223565b0381865afa908115611e7d578891611e60575b5015611ddd578697823b1561093a578588959186928251998a9788967f3740c183000000000000000000000000000000000000000000000000000000008852856004890152611ced8280612dd7565b909160448a01526101c4890190611d0392612e27565b90602483013560648901526044830135608489015260648301611d2591612e66565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc8984030160a48a0152611d599291612ef2565b608482013560c488015290611d7460e4880160a48301612f4a565b610144611d878882016101048401612f6d565b611d979161018489019101612f6d565b858103928301602487015260128152017f555345525f5550444154455f504f434b45540000000000000000000000000000905201925af19081156103f957506103e65750f35b6084848651907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152603160248201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f742061626c6520746f207570646174650000000000000000000000000000006064820152fd5b611e779150853d87116104af576104a18183612ba9565b38611c9e565b86513d8a823e3d90fd5b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835760209060ff6033541690519015158152f35b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018357611eff612a26565b60335460ff811615611f5d577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006020921660335551338152a180f35b606482517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b82610d92611fd2611fca36612933565b610d7a61319c565b906136d0565b5090346103f657611fe8366128de565b94919290611ff461319c565b73ffffffffffffffffffffffffffffffffffffffff908160fb541684517f983d2737000000000000000000000000000000000000000000000000000000008152602081600481855afa908115611e7d578891612593575b5085517f91d148540000000000000000000000000000000000000000000000000000000081526004810191909152336024820152602081604481855afa908115611e7d57906120a091899161257a5750613422565b6020855180927fb3fd1da500000000000000000000000000000000000000000000000000000000825282600483015281806120df602482018c8b612e27565b03915afa9081156104b6579161210161213e999287948a916125615750613258565b8360fc541690888451809b819582947fb678a8720000000000000000000000000000000000000000000000000000000084528c8b600486016132f9565b03925af19586156125575785908697612535575b508160fb54169684517fd3fc80d90000000000000000000000000000000000000000000000000000000081526020818061219285878c8b600486016132f9565b03818c5afa908115611e7d578891612516575b508551987f1416642e000000000000000000000000000000000000000000000000000000008a5260208a806121e086888d8c600486016132f9565b0381845afa998a1561091c57899a6124f5575b508182156124ee575b1561246b578899612373575b50612273575b50506122259060fb54169183519461034486612b8d565b6020840152600382840152803b1561105357611025849391849284519586809481937fe1386824000000000000000000000000000000000000000000000000000000008352600483016133b1565b8260fb54169085519261228584612b71565b612290368988612c8d565b8452336020850152868401526060830152803b156108fb576122ea8791869383855195869485937fb48093e1000000000000000000000000000000000000000000000000000000008552826004860152604485019061331d565b7f4f50455241544f525f53544f505f4c4f535300000000000000000000000000006020858303927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8401602488015260128152015201925af18015612369579086911561220e5761235a90612b5d565b61236557843861220e565b8480fd5b84513d88823e3d90fd5b86519061237f82612b71565b61238a368a89612c8d565b82523360208301528488830152836060830152803b15612467576123e68a91899383855195869485937fb48093e1000000000000000000000000000000000000000000000000000000008552826004860152604485019061331d565b7f4f50455241544f525f54414b455f50524f4649540000000000000000000000006020858303927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8401602488015260148152015201925af1801561091c57908991612453575b50612208565b61245c90612b5d565b61093a57873861244d565b8980fd5b608487517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f7065726174696f6e206572726f723a20636c6f73696e6720706f736974696f60448201527f6e20636f6e646974696f6e20646f6573206e6f742072656163680000000000006064820152fd5b50896121fc565b61250f919a5060203d6020116104af576104a18183612ba9565b98386121f3565b61252f915060203d6020116104af576104a18183612ba9565b386121a5565b905061254f919650833d8511610a1957610a078183612ba9565b959038612152565b83513d87823e3d90fd5b6110a2915060203d6020116104af576104a18183612ba9565b610ad6915060203d6020116104af576104a18183612ba9565b90506020813d6020116125be575b816125ae60209383612ba9565b81010312610b045751602061204b565b3d91506125a1565b5034610183577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f65760043567ffffffffffffffff811161018357612617610d929136906004016128b0565b610d8961319c565b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c45760043567ffffffffffffffff81116104c0576126739036906004016128b0565b909461267d61319c565b73ffffffffffffffffffffffffffffffffffffffff958660fb541685855180927f7bc0394000000000000000000000000000000000000000000000000000000000825281806126d1338a8960048501613223565b03915afa9081156104b6578791612893575b501561281057612703908451936126f985612b12565b3385523691612c8d565b848301528560fc541695863b156104025785845180987f61a45ae6000000000000000000000000000000000000000000000000000000008252876004830152818381612752602482018a613d3d565b03925af18015612369576127fc575b85965060fb5416803b1561040257859283856127d2947f555345525f57495448445245575f46554e4400000000000000000000000000008251998a9788967fbcf7a1220000000000000000000000000000000000000000000000000000000088528560048901526044880190613d3d565b868103938401602488015260128152015201925af19081156103f9575061103f5750600160655580f35b94909561280890612b5d565b938590612761565b6084858551907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602c60248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420776974686472617760448201527f20706f636b65742066756e6400000000000000000000000000000000000000006064820152fd5b6128aa9150863d88116104af576104a18183612ba9565b386126e3565b9181601f84011215610b045782359167ffffffffffffffff8311610b045760208381860195010111610b0457565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc820112610b04576004359067ffffffffffffffff8211610b0457612927916004016128b0565b90916024359060443590565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc90602082820112610b04576004359167ffffffffffffffff8311610b04578261022092030112610b045760040190565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610b0457565b359073ffffffffffffffffffffffffffffffffffffffff82168203610b0457565b919082519283825260005b848110612a125750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016129d3565b73ffffffffffffffffffffffffffffffffffffffff609754163303612a4757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6097549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6040810190811067ffffffffffffffff821117612b2e57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111612b2e57604052565b6080810190811067ffffffffffffffff821117612b2e57604052565b6060810190811067ffffffffffffffff821117612b2e57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612b2e57604052565b67ffffffffffffffff8111612b2e5760051b60200190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610b04570180359067ffffffffffffffff8211610b0457602001918136038313610b0457565b67ffffffffffffffff8111612b2e57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192612c9982612c53565b91612ca76040519384612ba9565b829481845281830111610b04578281602093846000960137010152565b8051821015612cd85760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91929015612d825750815115612d1b575090565b3b15612d245790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015612d955750805190602001fd5b612dd3906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906129c8565b0390fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe182360301811215610b0457016020813591019167ffffffffffffffff8211610b04578136038313610b0457565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe182360301811215610b0457016020813591019167ffffffffffffffff8211610b04578160061b36038313610b0457565b60041115612ec357565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b918181526020809101929160009182905b828210612f1257505050505090565b909192939485358152818601356004811015610402579081612f35600193612eb9565b81840152604090810196019493920190612f03565b60409080358352602081013560208401520135906007821015610b045760400152565b80356004811015610b045760209181612f868493612eb9565b84520135910152565b6020810180359173ffffffffffffffffffffffffffffffffffffffff92838116809103610b0457330361313e578260fb5416803b15610b0457604051937fe3ba99a9000000000000000000000000000000000000000000000000000000008552602060048601528061302061301a6130078680612dd7565b61022060248b01526102448a0191612e27565b956129a7565b16604486015280613033604085016129a7565b16606486015280613046606085016129a7565b166084860152613058608084016129a7565b1660a485015260a0820135916003831015610b04576000858094926131166130d68498849660c486015260c084013560e486015260e08401356101048601526130a5610100850185612e66565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc87840301610124880152612ef2565b916101208101356101448501526130f561016485016101408301612f4a565b6131076101c485016101a08301612f6d565b6101e061020485019101612f6d565b03925af18015613132576131275750565b61313090612b5d565b565b6040513d6000823e3d90fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f496e76616c696420706f636b65743a206f776e6572206d69736d6174636865736044820152fd5b6002606554146131ad576002606555565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b90816020910312610b0457518015158103610b045790565b9161325160209273ffffffffffffffffffffffffffffffffffffffff92969596604086526040860191612e27565b9416910152565b1561325f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f7420726561647920746f20636c6f736520706f736974696f6e0000000000006064820152fd5b9190826040910312610b04576020825192015190565b906133139060409396959496606084526060840191612e27565b9460208201520152565b9060608061333484516080855260808501906129c8565b9373ffffffffffffffffffffffffffffffffffffffff602082015116602085015260408101516040850152015191015290565b9073ffffffffffffffffffffffffffffffffffffffff8251168152604061339d60208401516060602085015260608401906129c8565b920151906005821015612ec3576040015290565b6133c5606092604083526040830190613367565b906020818303910152602481527f434c4f5345445f504f434b45545f4455455f544f5f504f534954494f4e5f434c60208201527f4f5345440000000000000000000000000000000000000000000000000000000060408201520190565b1561342957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f70657261746f72206960448201527f73207065726d697474656420666f7220746865206f7065726174696f6e0000006064820152fd5b156134b457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f7065726174696f6e206572726f723a2063616e6e6f74206465706f736974006044820152fd5b519073ffffffffffffffffffffffffffffffffffffffff82168203610b0457565b9190826040910312610b045760405161354b81612b12565b809280516004811015610b04578252602090810151910152565b90918183036101e08112610b045761357c83613512565b9361358960208501613512565b9361359660408201613512565b9360608201516003811015610b04579360808301519360a08401519360c08101519360607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060e0840151950112610b04576040516135f381612b8d565b61010083015181526101208301516020820152610140830151906007821015610b0457613638916040820152936101a0613631826101608701613533565b9401613533565b90565b90606073ffffffffffffffffffffffffffffffffffffffff8084511683528161367360208601516080602087015260808601906129c8565b946040810151604086015201511691015290565b6136996040928383528383019061363b565b906020818303910152601381527f555345525f4445504f53495445445f46554e440000000000000000000000000060208201520190565b60009134156139f95773ffffffffffffffffffffffffffffffffffffffff918260fb5416926040938451927f4418eb00000000000000000000000000000000000000000000000000000000008452602091600494838180613735338b888c8501613223565b0381855afa9081156139875790613753918a916139dc575b506134ad565b865180917fe058d72400000000000000000000000000000000000000000000000000000000825284878301526101e09283918180613795602482018d8a612e27565b03915afa91821561398757908592918a926139a4575b50501690813b1561093a5786517fd0e30db00000000000000000000000000000000000000000000000000000000081528881878134875af1801561398757613991575b5060fc5487517f095ea7b300000000000000000000000000000000000000000000000000000000815290851673ffffffffffffffffffffffffffffffffffffffff1686820190815234602082015284908290819060400103818c875af180156139875790613873929161396a575b5087519661386988612b71565b3388523691612c8d565b82860152348686015260608501528160fc541690813b156108fb57869086519283917f8b6a70c4000000000000000000000000000000000000000000000000000000008352868301528183816138cc602482018b61363b565b03925af180156139605790869161394c575b505060fb541690813b156123655791849184938361392796518097819582947f99ba80570000000000000000000000000000000000000000000000000000000084528301613687565b03925af19081156103f9575061393b575050565b6139458291612b5d565b6103f65750565b61395590612b5d565b6123655784386138de565b85513d88823e3d90fd5b61398090853d87116104af576104a18183612ba9565b503861385c565b88513d8b823e3d90fd5b61399d90989198612b5d565b96386137ee565b6139c39250803d106139d5575b6139bb8183612ba9565b810190613565565b505050505050505050905038806137ab565b503d6139b1565b6139f39150853d87116104af576104a18183612ba9565b3861374d565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f7065726174696f6e206572726f723a20696e76616c696420616d6f756e74006044820152fd5b9060fb549260009373ffffffffffffffffffffffffffffffffffffffff8091166040948551937f4418eb00000000000000000000000000000000000000000000000000000000008552602092600495848180613ab7338c898d8501613223565b0381855afa908115613cf45790613ad4918b91613cfe57506134ad565b875180917fe058d72400000000000000000000000000000000000000000000000000000000825285888301526101e09283918180613b178d60248301908b612e27565b03915afa918215613cf457908692918b92613d15575b5050169187517f23b872dd000000000000000000000000000000000000000000000000000000008152338782015230602482015282604482015284816064818d885af1908115613cf45790613b88918b91613cfe57506134ad565b613be784838760fc54168b5193849283927f095ea7b30000000000000000000000000000000000000000000000000000000084528c84016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818d885af18015613cf45790613c159291613cd7575b50885197613c0b89612b71565b3389523691612c8d565b838701528686015260608501528160fc541690813b156108fb57869086519283917f8b6a70c400000000000000000000000000000000000000000000000000000000835286830152818381613c6d602482018b61363b565b03925af1801561396057613cc4575b5060fb541690813b156123655791849184938361392796518097819582947f99ba80570000000000000000000000000000000000000000000000000000000084528301613687565b613cd090959195612b5d565b9338613c7c565b613ced90863d88116104af576104a18183612ba9565b5038613bfe565b89513d8c823e3d90fd5b6139f39150863d88116104af576104a18183612ba9565b613d2b9250803d106139d5576139bb8183612ba9565b50505050505050505090503880613b2d565b90604060206136389373ffffffffffffffffffffffffffffffffffffffff815116845201519181602082015201906129c8565b15613d7757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fdfea26469706673582212204f414da31e2e9459cc13ab34ddd3c13daf09a137587a4f6ecb1c7a6f2201845f64736f6c63430008130033";

type PocketChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PocketChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PocketChef__factory extends ContractFactory {
  constructor(...args: PocketChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PocketChef & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PocketChef__factory {
    return super.connect(runner) as PocketChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PocketChefInterface {
    return new Interface(_abi) as PocketChefInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PocketChef {
    return new Contract(address, _abi, runner) as unknown as PocketChef;
  }
}
