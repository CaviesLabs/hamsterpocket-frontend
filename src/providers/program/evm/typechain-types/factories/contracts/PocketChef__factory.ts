/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PocketChef,
  PocketChefInterface,
} from "../../contracts/PocketChef";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "RegistryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "VaultUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "closePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createPocketAndDepositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreatePocketParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "createPocketAndDepositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "pausePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract PocketRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "restartPocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "tryClosingPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "tryMakingDCASwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.UpdatePocketParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "updatePocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract PocketVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pocketId",
        type: "string",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60808060405234620000c6576000549060ff8260081c1662000074575060ff8082161062000038575b604051613e9e9081620000cc8239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000028565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c806331fb67c2146126fc57806333ad57e41461268e57806335d4b6f2146120945780633769e9d71461206f5780633f4ba83a14611f7d5780635c975abb14611f3c5780635e54c03414611c8a5780636817031b14611bd9578063715018a614611b3a57806377c7632114611ad25780637b10399914611a805780637fa97c261461189d5780638129fc1c146116875780638456cb59146115935780638da5cb5b1461154157806395e9dcf71461152a578063a91ee0dc1461147c578063ac9650d81461116c578063b678a87214610db2578063c60910d014610d23578063cbfc305b14610b1c578063e29e28d3146104c8578063e4a479b514610274578063f2fde38b146101875763fbfa77cf1461013257600080fd5b3461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835760209073ffffffffffffffffffffffffffffffffffffffff60fc54169051908152f35b5080fd5b50346101835760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610183576101bf612a6d565b906101c8612b0f565b73ffffffffffffffffffffffffffffffffffffffff8216156101f157506101ee90612b8e565b80f35b608490517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c45760043567ffffffffffffffff81116104c0576102c8903690600401612999565b909473ffffffffffffffffffffffffffffffffffffffff60fb541683517f80b443c300000000000000000000000000000000000000000000000000000000815285818061031a33888d60048501613290565b0381855afa9081156104b6578791610489575b50156104065761034e869785519461034486612c76565b3386523691612d76565b85840152600184840152803b1561040257859283856103c2947f555345525f5245535441525445445f504f434b455400000000000000000000008251998a9788967fe138682400000000000000000000000000000000000000000000000000000000885285600489015260448801906133d4565b868103938401602488015260158152015201925af19081156103f957506103e65750f35b6103ef90612c46565b6103f65780f35b80fd5b513d84823e3d90fd5b8580fd5b6084858551907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602660248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420726573746172742060448201527f706f636b657400000000000000000000000000000000000000000000000000006064820152fd5b6104a99150863d88116104af575b6104a18183612c92565b810190613278565b3861032d565b503d610497565b85513d89823e3d90fd5b8380fd5b8280fd5b5090346103f6576104d8366129c7565b949190926104eb60026065541415613213565b600260655573ffffffffffffffffffffffffffffffffffffffff908160fb5416928451957f983d27370000000000000000000000000000000000000000000000000000000087526020968781600481895afa80156109285788908a90610ae8575b88517f91d14854000000000000000000000000000000000000000000000000000000008152600481019190915233602482015291508180604481015b0381895afa90811561092857906105a6918a91610acb575b5061348f565b85517fc11bc90f000000000000000000000000000000000000000000000000000000008152876004820152878160249781806105e58b8201898b612e9e565b03915afa908115610928578991610aae575b5015610a2c576106409886918560fc5416908a8451809d819582947f5b349746000000000000000000000000000000000000000000000000000000008452898b60048601613366565b03925af19283156104b657879888946109f7575b5060fb5486517f125167ef00000000000000000000000000000000000000000000000000000000815290821690888180610694898f898b60048601613366565b0381855afa9081156109ed578a916109d0575b501561094e5788998751956106bb87612c5a565b3387526106c9368688612d76565b928a880193845289880192835260608801918252803b1561094a5788978c8b81958e89968351998a9889977f368e0b6c0000000000000000000000000000000000000000000000000000000089528660048a01525116604488015251606487016080905260c4870161073a91612ab1565b925160848701525160a4860152848203917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9e8f840190870152601e8152017f4f50455241544f525f555044415445445f54524144494e475f53544154530000905201925af1801561092857908991610932575b505060fb54169185517f534ca7a20000000000000000000000000000000000000000000000000000000081528760048201528781806107f08882018787612e9e565b0381875afa90811561092857899161090b575b50610812575b87600160655580f35b61082c9086519261082284612c76565b3384523691612d76565b86820152600385820152813b156109075786606081957f4f505f434f4e444954494f4e5300000000000000000000000000000000000000886108c3977f4f50455241544f525f434c4f5345445f504f434b45545f4455455f544f5f535482519c8d9a8b997fe1386824000000000000000000000000000000000000000000000000000000008b528560048c015260448b01906133d4565b92898403968701908a0152602d8352820152015201925af19081156103f957506108f3575b808080808080610809565b6108fc90612c46565b6103f65780386108e8565b8680fd5b6109229150883d8a116104af576104a18183612c92565b38610803565b87513d8b823e3d90fd5b61093b90612c46565b6109465787386107ae565b8780fd5b8b80fd5b608488602d888a51927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f4f7065726174696f6e206572726f723a2062757920636f6e646974696f6e206460448201527f6f6573206e6f74207265616368000000000000000000000000000000000000006064820152fd5b6109e79150893d8b116104af576104a18183612c92565b386106a7565b88513d8c823e3d90fd5b909350610a1b919850853d8711610a25575b610a138183612c92565b810190613350565b9790979238610654565b503d610a09565b6084876038878951927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f7420726561647920746f20706572666f726d207377617000000000000000006064820152fd5b610ac59150883d8a116104af576104a18183612c92565b386105f7565b610ae29150893d8b116104af576104a18183612c92565b386105a0565b5081813d8311610b15575b610afd8183612c92565b81010312610b105787610588915161054c565b600080fd5b503d610af3565b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c45760043567ffffffffffffffff81116104c057610b70903690600401612999565b909473ffffffffffffffffffffffffffffffffffffffff60fb541683517fe6068d01000000000000000000000000000000000000000000000000000000008152858180610bc233888d60048501613290565b0381855afa9081156104b6578791610d06575b5015610c8457610bec869785519461034486612c76565b85840152600384840152803b156104025785928385610c60947f555345525f434c4f5345445f504f434b455400000000000000000000000000008251998a9788967fe138682400000000000000000000000000000000000000000000000000000000885285600489015260448801906133d4565b868103938401602488015260128152015201925af19081156103f957506103e65750f35b6084858551907f08c379a000000000000000000000000000000000000000000000000000000000825260048201526024808201527f4f7065726174696f6e206572726f723a2063616e6e6f7420636c6f736520706f60448201527f636b6574000000000000000000000000000000000000000000000000000000006064820152fd5b610d1d9150863d88116104af576104a18183612c92565b38610bd5565b5034610183577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9081360112610183576004359067ffffffffffffffff82116104c4576102209082600401923603011261018357610da1610daa91610d8d60026065541415613213565b6002606555610d9b81613006565b80612ceb565b60243591613ac4565b600160655580f35b5090346103f657610dc2366129c7565b94919290610dd560026065541415613213565b600260655573ffffffffffffffffffffffffffffffffffffffff8060fb5416968451927f819e8a3a000000000000000000000000000000000000000000000000000000008452602093848180610e30338c8b60048501613290565b03818d5afa90811561092857899161114f575b50156110cc57879884875180927fb3fd1da50000000000000000000000000000000000000000000000000000000082528260048301528180610e8a8d60248301908d612e9e565b03915afa9081156109285791610ead610eeb949289948c916110af575b506132c5565b8460fc5416908a8a8551968795869485937fb678a8720000000000000000000000000000000000000000000000000000000085528d60048601613366565b03925af180156104b65787918891611090575b508260fb541690865192610f1184612c5a565b610f1c368a89612d76565b84523386850152878401526060830152803b1561094657610f758891879383855195869485937fb48093e1000000000000000000000000000000000000000000000000000000008552826004860152604485019061338a565b7f555345525f434c4f5345445f504f534954494f4e0000000000000000000000008a858303927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8401602488015260148152015201925af180156104b65790879161107c575b5050610ffc9060fb541692845195610ff287612c76565b3387523691612d76565b90840152600382840152803b1561107757611049849391849284519586809481937fe13868240000000000000000000000000000000000000000000000000000000083526004830161341e565b03925af19081156103f95750611063575b50600160655580f35b61106c90612c46565b6103f657803861105a565b505050fd5b61108590612c46565b610402578538610fdb565b90506110a99150853d8711610a2557610a138183612c92565b38610efe565b6110c69150883d8a116104af576104a18183612c92565b38610ea7565b6084848751907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152603a60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f776e6572206973207060448201527f65726d697474656420666f7220746865206f7065726174696f6e0000000000006064820152fd5b6111669150853d87116104af576104a18183612c92565b38610e43565b5090346103f657602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610183576004359067ffffffffffffffff938483116104c057366023840112156104c05782600401359485116104c0576024808401956005963683838a1b88010111610907576111ee8297959497612cd3565b956111fb85519788612c92565b8287527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061122884612cd3565b01865b81811061146d575050855b8381106112b75750505050508051938080860192818752855180945283818801981b870101940192955b82871061126d5785850386f35b9091929382806112a7837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08a600196030186528851612ab1565b9601920196019592919092611260565b6112d56112ce86838d9c999a9c1b85010185612ceb565b3691612d76565b303b156113eb578980828961136f94519101305af43d156113e4573d6112fa81612d3c565b906113078b519283612c92565b81523d8c8a83013e5b89519161131c83612c76565b602783527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c8a8401527f206661696c6564000000000000000000000000000000000000000000000000008b840152612df0565b611379828a612dad565b526113848189612dad565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113b85760010197959497611236565b84897f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6060611310565b6084876026888b51927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152fd5b60608982018b0152890161122b565b50346101835760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835773ffffffffffffffffffffffffffffffffffffffff6114c9612a6d565b6114d1612b0f565b1690817fffffffffffffffffffffffff000000000000000000000000000000000000000060fb54161760fb55519081527f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8260203392a280f35b82346103f6576101ee61153c36612a1c565b613006565b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835760209073ffffffffffffffffffffffffffffffffffffffff609754169051908152f35b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610183576115ca612b0f565b60335460ff811661162a577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589160017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00602093161760335551338152a180f35b606482517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152fd5b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018357815460ff8160081c161590818092611890575b8015611879575b156117f6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00808216600117855561173991836117c8575b5060ff855460081c169061171b82613ddd565b61172482613ddd565b6033541660335561173481613ddd565b613ddd565b61174233612b8e565b82549061176b60ff8360081c1661175881613ddd565b61176181613ddd565b6001606555613ddd565b611773578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6020921684555160018152a138808280f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661010117855538611708565b608483517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156116d05750600160ff8216146116d0565b50600160ff8216106116c9565b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c45760043567ffffffffffffffff81116104c0576118f1903690600401612999565b909473ffffffffffffffffffffffffffffffffffffffff60fb541683517f9d92d73700000000000000000000000000000000000000000000000000000000815285818061194333888d60048501613290565b0381855afa9081156104b6578791611a63575b50156119e15761196d869785519461034486612c76565b85840152600284840152803b156104025785928385610c60947f555345525f5041555345445f504f434b455400000000000000000000000000008251998a9788967fe138682400000000000000000000000000000000000000000000000000000000885285600489015260448801906133d4565b6084858551907f08c379a000000000000000000000000000000000000000000000000000000000825260048201526024808201527f4f7065726174696f6e206572726f723a2063616e6e6f7420706175736520706f60448201527f636b6574000000000000000000000000000000000000000000000000000000006064820152fd5b611a7a9150863d88116104af576104a18183612c92565b38611956565b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835760209073ffffffffffffffffffffffffffffffffffffffff60fb54169051908152f35b8260207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f65760043567ffffffffffffffff811161018357611b20610daa913690600401612999565b90611b3060026065541415613213565b600260655561373d565b82346103f657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f657611b71612b0f565b600073ffffffffffffffffffffffffffffffffffffffff6097547fffffffffffffffffffffffff00000000000000000000000000000000000000008116609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101835760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610183576004359073ffffffffffffffffffffffffffffffffffffffff82168092036104c457611c33612b0f565b817fffffffffffffffffffffffff000000000000000000000000000000000000000060fc54161760fc55519081527f483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea3960203392a280f35b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c4576004359167ffffffffffffffff83116104c05782600401610180808786360301126104025773ffffffffffffffffffffffffffffffffffffffff60fb541690611d4084611d0b8580612ceb565b885193849283927fb612f866000000000000000000000000000000000000000000000000000000008452339160048501613290565b0381865afa908115611f32578891611f15575b5015611e92578697823b15610946578588959186928251998a9788967f3740c183000000000000000000000000000000000000000000000000000000008852856004890152611da28280612e4e565b909160448a01526101c4890190611db892612e9e565b90602483013560648901526044830135608489015260648301611dda91612edd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc8984030160a48a0152611e0e9291612f69565b608482013560c488015290611e2960e4880160a48301612fc1565b610144611e3c8882016101048401612fe4565b611e4c9161018489019101612fe4565b858103928301602487015260128152017f555345525f5550444154455f504f434b45540000000000000000000000000000905201925af19081156103f957506103e65750f35b6084848651907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152603160248201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f742061626c6520746f207570646174650000000000000000000000000000006064820152fd5b611f2c9150853d87116104af576104a18183612c92565b38611d53565b86513d8a823e3d90fd5b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101835760209060ff6033541690519015158152f35b503461018357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018357611fb4612b0f565b60335460ff811615612012577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006020921660335551338152a180f35b606482517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b82610daa61208e61207f36612a1c565b610d8d60026065541415613213565b9061373d565b5090346103f6576120a4366129c7565b949192906120b760026065541415613213565b600260655573ffffffffffffffffffffffffffffffffffffffff908160fb541684517f983d2737000000000000000000000000000000000000000000000000000000008152602081600481855afa908115611f3257889161265b575b5085517f91d148540000000000000000000000000000000000000000000000000000000081526004810191909152336024820152602081604481855afa908115611f325790612168918991612642575061348f565b6020855180927fb3fd1da500000000000000000000000000000000000000000000000000000000825282600483015281806121a7602482018c8b612e9e565b03915afa9081156104b657916121c9612206999287948a9161262957506132c5565b8360fc541690888451809b819582947fb678a8720000000000000000000000000000000000000000000000000000000084528c8b60048601613366565b03925af195861561261f57859086976125fd575b508160fb54169684517fd3fc80d90000000000000000000000000000000000000000000000000000000081526020818061225a85878c8b60048601613366565b03818c5afa908115611f325788916125de575b508551987f1416642e000000000000000000000000000000000000000000000000000000008a5260208a806122a886888d8c60048601613366565b0381845afa998a1561092857899a6125bd575b508182156125b6575b1561253357889961243b575b5061233b575b50506122ed9060fb54169183519461034486612c76565b6020840152600382840152803b1561107757611049849391849284519586809481937fe13868240000000000000000000000000000000000000000000000000000000083526004830161341e565b8260fb54169085519261234d84612c5a565b612358368988612d76565b8452336020850152868401526060830152803b15610907576123b28791869383855195869485937fb48093e1000000000000000000000000000000000000000000000000000000008552826004860152604485019061338a565b7f4f50455241544f525f53544f505f4c4f535300000000000000000000000000006020858303927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8401602488015260128152015201925af1801561243157908691156122d65761242290612c46565b61242d5784386122d6565b8480fd5b84513d88823e3d90fd5b86519061244782612c5a565b612452368a89612d76565b82523360208301528488830152836060830152803b1561252f576124ae8a91899383855195869485937fb48093e1000000000000000000000000000000000000000000000000000000008552826004860152604485019061338a565b7f4f50455241544f525f54414b455f50524f4649540000000000000000000000006020858303927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8401602488015260148152015201925af180156109285790899161251b575b506122d0565b61252490612c46565b610946578738612515565b8980fd5b608487517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f7065726174696f6e206572726f723a20636c6f73696e6720706f736974696f60448201527f6e20636f6e646974696f6e20646f6573206e6f742072656163680000000000006064820152fd5b50896122c4565b6125d7919a5060203d6020116104af576104a18183612c92565b98386122bb565b6125f7915060203d6020116104af576104a18183612c92565b3861226d565b9050612617919650833d8511610a2557610a138183612c92565b95903861221a565b83513d87823e3d90fd5b6110c6915060203d6020116104af576104a18183612c92565b610ae2915060203d6020116104af576104a18183612c92565b90506020813d602011612686575b8161267660209383612c92565b81010312610b1057516020612113565b3d9150612669565b5034610183577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f65760043567ffffffffffffffff8111610183576126df610daa913690600401612999565b6126ee60026065541415613213565b600260655560243591613ac4565b5090346103f65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9281843601126104c45760043567ffffffffffffffff81116104c057612750903690600401612999565b909461276160026065541415613213565b600260655573ffffffffffffffffffffffffffffffffffffffff958660fb541685855180927f7bc0394000000000000000000000000000000000000000000000000000000000825281806127ba338a8960048501613290565b03915afa9081156104b657879161297c575b50156128f9576127ec908451936127e285612bfb565b3385523691612d76565b848301528560fc541695863b156104025785845180987f61a45ae600000000000000000000000000000000000000000000000000000000825287600483015281838161283b602482018a613daa565b03925af18015612431576128e5575b85965060fb5416803b1561040257859283856128bb947f555345525f57495448445245575f46554e4400000000000000000000000000008251998a9788967fbcf7a1220000000000000000000000000000000000000000000000000000000088528560048901526044880190613daa565b868103938401602488015260128152015201925af19081156103f957506110635750600160655580f35b9490956128f190612c46565b93859061284a565b6084858551907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602c60248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420776974686472617760448201527f20706f636b65742066756e6400000000000000000000000000000000000000006064820152fd5b6129939150863d88116104af576104a18183612c92565b386127cc565b9181601f84011215610b105782359167ffffffffffffffff8311610b105760208381860195010111610b1057565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc820112610b10576004359067ffffffffffffffff8211610b1057612a1091600401612999565b90916024359060443590565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc90602082820112610b10576004359167ffffffffffffffff8311610b10578261022092030112610b105760040190565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610b1057565b359073ffffffffffffffffffffffffffffffffffffffff82168203610b1057565b919082519283825260005b848110612afb5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201612abc565b73ffffffffffffffffffffffffffffffffffffffff609754163303612b3057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6097549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6040810190811067ffffffffffffffff821117612c1757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111612c1757604052565b6080810190811067ffffffffffffffff821117612c1757604052565b6060810190811067ffffffffffffffff821117612c1757604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612c1757604052565b67ffffffffffffffff8111612c175760051b60200190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610b10570180359067ffffffffffffffff8211610b1057602001918136038313610b1057565b67ffffffffffffffff8111612c1757601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192612d8282612d3c565b91612d906040519384612c92565b829481845281830111610b10578281602093846000960137010152565b8051821015612dc15760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90919015612dfc575090565b815115612e0c5750805190602001fd5b612e4a906040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352602060048401526024830190612ab1565b0390fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe182360301811215610b1057016020813591019167ffffffffffffffff8211610b10578136038313610b1057565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe182360301811215610b1057016020813591019167ffffffffffffffff8211610b10578160061b36038313610b1057565b60041115612f3a57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b918181526020809101929160009182905b828210612f8957505050505090565b909192939485358152818601356004811015610402579081612fac600193612f30565b81840152604090810196019493920190612f7a565b60409080358352602081013560208401520135906007821015610b105760400152565b80356004811015610b105760209181612ffd8493612f30565b84520135910152565b6020810180359173ffffffffffffffffffffffffffffffffffffffff92838116809103610b105733036131b5578260fb5416803b15610b1057604051937fe3ba99a9000000000000000000000000000000000000000000000000000000008552602060048601528061309761309161307e8680612e4e565b61022060248b01526102448a0191612e9e565b95612a90565b166044860152806130aa60408501612a90565b166064860152806130bd60608501612a90565b1660848601526130cf60808401612a90565b1660a485015260a0820135916003831015610b105760008580949261318d61314d8498849660c486015260c084013560e486015260e084013561010486015261311c610100850185612edd565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc87840301610124880152612f69565b9161012081013561014485015261316c61016485016101408301612fc1565b61317e6101c485016101a08301612fe4565b6101e061020485019101612fe4565b03925af180156131a95761319e5750565b6131a790612c46565b565b6040513d6000823e3d90fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f496e76616c696420706f636b65743a206f776e6572206d69736d6174636865736044820152fd5b1561321a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b90816020910312610b1057518015158103610b105790565b916132be60209273ffffffffffffffffffffffffffffffffffffffff92969596604086526040860191612e9e565b9416910152565b156132cc57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f7065726174696f6e206572726f723a2074686520706f636b6574206973206e60448201527f6f7420726561647920746f20636c6f736520706f736974696f6e0000000000006064820152fd5b9190826040910312610b10576020825192015190565b906133809060409396959496606084526060840191612e9e565b9460208201520152565b906060806133a18451608085526080850190612ab1565b9373ffffffffffffffffffffffffffffffffffffffff602082015116602085015260408101516040850152015191015290565b9073ffffffffffffffffffffffffffffffffffffffff8251168152604061340a6020840151606060208501526060840190612ab1565b920151906005821015612f3a576040015290565b6134326060926040835260408301906133d4565b906020818303910152602481527f434c4f5345445f504f434b45545f4455455f544f5f504f534954494f4e5f434c60208201527f4f5345440000000000000000000000000000000000000000000000000000000060408201520190565b1561349657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f70657261746f72206960448201527f73207065726d697474656420666f7220746865206f7065726174696f6e0000006064820152fd5b1561352157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f7065726174696f6e206572726f723a2063616e6e6f74206465706f736974006044820152fd5b519073ffffffffffffffffffffffffffffffffffffffff82168203610b1057565b9190826040910312610b10576040516135b881612bfb565b809280516004811015610b10578252602090810151910152565b90918183036101e08112610b10576135e98361357f565b936135f66020850161357f565b936136036040820161357f565b9360608201516003811015610b10579360808301519360a08401519360c08101519360607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060e0840151950112610b105760405161366081612c76565b61010083015181526101208301516020820152610140830151906007821015610b10576136a5916040820152936101a061369e8261016087016135a0565b94016135a0565b90565b90606073ffffffffffffffffffffffffffffffffffffffff808451168352816136e06020860151608060208701526080860190612ab1565b946040810151604086015201511691015290565b613706604092838352838301906136a8565b906020818303910152601381527f555345525f4445504f53495445445f46554e440000000000000000000000000060208201520190565b6000913415613a665773ffffffffffffffffffffffffffffffffffffffff918260fb5416926040938451927f4418eb000000000000000000000000000000000000000000000000000000000084526020916004948381806137a2338b888c8501613290565b0381855afa9081156139f457906137c0918a91613a49575b5061351a565b865180917fe058d72400000000000000000000000000000000000000000000000000000000825284878301526101e09283918180613802602482018d8a612e9e565b03915afa9182156139f457908592918a92613a11575b50501690813b156109465786517fd0e30db00000000000000000000000000000000000000000000000000000000081528881878134875af180156139f4576139fe575b5060fc5487517f095ea7b300000000000000000000000000000000000000000000000000000000815290851673ffffffffffffffffffffffffffffffffffffffff1686820190815234602082015284908290819060400103818c875af180156139f457906138e092916139d7575b508751966138d688612c5a565b3388523691612d76565b82860152348686015260608501528160fc541690813b1561090757869086519283917f8b6a70c400000000000000000000000000000000000000000000000000000000835286830152818381613939602482018b6136a8565b03925af180156139cd579086916139b9575b505060fb541690813b1561242d5791849184938361399496518097819582947f99ba805700000000000000000000000000000000000000000000000000000000845283016136f4565b03925af19081156103f957506139a8575050565b6139b28291612c46565b6103f65750565b6139c290612c46565b61242d57843861394b565b85513d88823e3d90fd5b6139ed90853d87116104af576104a18183612c92565b50386138c9565b88513d8b823e3d90fd5b613a0a90989198612c46565b963861385b565b613a309250803d10613a42575b613a288183612c92565b8101906135d2565b50505050505050505090503880613818565b503d613a1e565b613a609150853d87116104af576104a18183612c92565b386137ba565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f7065726174696f6e206572726f723a20696e76616c696420616d6f756e74006044820152fd5b9060fb549260009373ffffffffffffffffffffffffffffffffffffffff8091166040948551937f4418eb00000000000000000000000000000000000000000000000000000000008552602092600495848180613b24338c898d8501613290565b0381855afa908115613d615790613b41918b91613d6b575061351a565b875180917fe058d72400000000000000000000000000000000000000000000000000000000825285888301526101e09283918180613b848d60248301908b612e9e565b03915afa918215613d6157908692918b92613d82575b5050169187517f23b872dd000000000000000000000000000000000000000000000000000000008152338782015230602482015282604482015284816064818d885af1908115613d615790613bf5918b91613d6b575061351a565b613c5484838760fc54168b5193849283927f095ea7b30000000000000000000000000000000000000000000000000000000084528c84016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818d885af18015613d615790613c829291613d44575b50885197613c7889612c5a565b3389523691612d76565b838701528686015260608501528160fc541690813b1561090757869086519283917f8b6a70c400000000000000000000000000000000000000000000000000000000835286830152818381613cda602482018b6136a8565b03925af180156139cd57613d31575b5060fb541690813b1561242d5791849184938361399496518097819582947f99ba805700000000000000000000000000000000000000000000000000000000845283016136f4565b613d3d90959195612c46565b9338613ce9565b613d5a90863d88116104af576104a18183612c92565b5038613c6b565b89513d8c823e3d90fd5b613a609150863d88116104af576104a18183612c92565b613d989250803d10613a4257613a288183612c92565b50505050505050505090503880613b9a565b90604060206136a59373ffffffffffffffffffffffffffffffffffffffff81511684520151918160208201520190612ab1565b15613de457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fdfea2646970667358221220ca71d6815af8118b3f543f30a2a2cb4442205924bec66588793a9341ed82600164736f6c63430008130033";

type PocketChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PocketChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PocketChef__factory extends ContractFactory {
  constructor(...args: PocketChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PocketChef> {
    return super.deploy(overrides || {}) as Promise<PocketChef>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PocketChef {
    return super.attach(address) as PocketChef;
  }
  override connect(signer: Signer): PocketChef__factory {
    return super.connect(signer) as PocketChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PocketChefInterface {
    return new utils.Interface(_abi) as PocketChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PocketChef {
    return new Contract(address, _abi, signerOrProvider) as PocketChef;
  }
}
